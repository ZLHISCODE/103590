VERSION 5.00
Object = "{BEEECC20-4D5F-4F8B-BFDC-5D9B6FBDE09D}#1.0#0"; "vsflex8.ocx"
Begin VB.Form frmDockExpense 
   AutoRedraw      =   -1  'True
   BackColor       =   &H00808080&
   BorderStyle     =   0  'None
   Caption         =   "Form1"
   ClientHeight    =   4065
   ClientLeft      =   0
   ClientTop       =   0
   ClientWidth     =   7350
   Icon            =   "frmDockExpense.frx":0000
   KeyPreview      =   -1  'True
   LinkTopic       =   "Form1"
   LockControls    =   -1  'True
   ScaleHeight     =   4065
   ScaleWidth      =   7350
   ShowInTaskbar   =   0   'False
   StartUpPosition =   3  '窗口缺省
   Begin VB.Frame fraBill_S 
      Appearance      =   0  'Flat
      BorderStyle     =   0  'None
      ForeColor       =   &H80000008&
      Height          =   45
      Left            =   30
      MousePointer    =   7  'Size N S
      TabIndex        =   2
      Top             =   1950
      Width           =   7110
   End
   Begin VSFlex8Ctl.VSFlexGrid vsMoney 
      Height          =   1830
      Left            =   15
      TabIndex        =   0
      Top             =   0
      Width           =   7185
      _cx             =   12674
      _cy             =   3228
      Appearance      =   1
      BorderStyle     =   1
      Enabled         =   -1  'True
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "宋体"
         Size            =   9
         Charset         =   134
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      MousePointer    =   0
      BackColor       =   -2147483643
      ForeColor       =   -2147483640
      BackColorFixed  =   -2147483633
      ForeColorFixed  =   -2147483630
      BackColorSel    =   16772055
      ForeColorSel    =   -2147483640
      BackColorBkg    =   -2147483643
      BackColorAlternate=   -2147483643
      GridColor       =   -2147483636
      GridColorFixed  =   -2147483636
      TreeColor       =   -2147483632
      FloodColor      =   192
      SheetBorder     =   -2147483643
      FocusRect       =   0
      HighLight       =   1
      AllowSelection  =   0   'False
      AllowBigSelection=   -1  'True
      AllowUserResizing=   1
      SelectionMode   =   1
      GridLines       =   1
      GridLinesFixed  =   1
      GridLineWidth   =   1
      Rows            =   2
      Cols            =   2
      FixedRows       =   1
      FixedCols       =   0
      RowHeightMin    =   250
      RowHeightMax    =   0
      ColWidthMin     =   0
      ColWidthMax     =   0
      ExtendLastCol   =   0   'False
      FormatString    =   ""
      ScrollTrack     =   -1  'True
      ScrollBars      =   3
      ScrollTips      =   0   'False
      MergeCells      =   2
      MergeCompare    =   0
      AutoResize      =   -1  'True
      AutoSizeMode    =   0
      AutoSearch      =   0
      AutoSearchDelay =   2
      MultiTotals     =   -1  'True
      SubtotalPosition=   1
      OutlineBar      =   0
      OutlineCol      =   0
      Ellipsis        =   0
      ExplorerBar     =   0
      PicturesOver    =   0   'False
      FillStyle       =   0
      RightToLeft     =   0   'False
      PictureType     =   0
      TabBehavior     =   0
      OwnerDraw       =   0
      Editable        =   0
      ShowComboButton =   1
      WordWrap        =   0   'False
      TextStyle       =   0
      TextStyleFixed  =   0
      OleDragMode     =   0
      OleDropMode     =   0
      DataMode        =   0
      VirtualData     =   -1  'True
      DataMember      =   ""
      ComboSearch     =   3
      AutoSizeMouse   =   -1  'True
      FrozenRows      =   0
      FrozenCols      =   0
      AllowUserFreezing=   0
      BackColorFrozen =   0
      ForeColorFrozen =   0
      WallPaperAlignment=   9
      AccessibleName  =   ""
      AccessibleDescription=   ""
      AccessibleValue =   ""
      AccessibleRole  =   24
   End
   Begin VSFlex8Ctl.VSFlexGrid vsDetail 
      Height          =   1875
      Left            =   0
      TabIndex        =   1
      Top             =   2070
      Width           =   7200
      _cx             =   12700
      _cy             =   3307
      Appearance      =   1
      BorderStyle     =   1
      Enabled         =   -1  'True
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "宋体"
         Size            =   9
         Charset         =   134
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      MousePointer    =   0
      BackColor       =   -2147483643
      ForeColor       =   -2147483640
      BackColorFixed  =   -2147483633
      ForeColorFixed  =   -2147483630
      BackColorSel    =   16772055
      ForeColorSel    =   -2147483640
      BackColorBkg    =   -2147483643
      BackColorAlternate=   -2147483643
      GridColor       =   -2147483636
      GridColorFixed  =   -2147483636
      TreeColor       =   -2147483632
      FloodColor      =   192
      SheetBorder     =   -2147483643
      FocusRect       =   0
      HighLight       =   1
      AllowSelection  =   0   'False
      AllowBigSelection=   -1  'True
      AllowUserResizing=   1
      SelectionMode   =   1
      GridLines       =   1
      GridLinesFixed  =   1
      GridLineWidth   =   1
      Rows            =   2
      Cols            =   2
      FixedRows       =   1
      FixedCols       =   0
      RowHeightMin    =   250
      RowHeightMax    =   0
      ColWidthMin     =   0
      ColWidthMax     =   0
      ExtendLastCol   =   0   'False
      FormatString    =   ""
      ScrollTrack     =   -1  'True
      ScrollBars      =   3
      ScrollTips      =   0   'False
      MergeCells      =   2
      MergeCompare    =   0
      AutoResize      =   -1  'True
      AutoSizeMode    =   0
      AutoSearch      =   0
      AutoSearchDelay =   2
      MultiTotals     =   -1  'True
      SubtotalPosition=   1
      OutlineBar      =   0
      OutlineCol      =   0
      Ellipsis        =   0
      ExplorerBar     =   0
      PicturesOver    =   0   'False
      FillStyle       =   0
      RightToLeft     =   0   'False
      PictureType     =   0
      TabBehavior     =   0
      OwnerDraw       =   0
      Editable        =   0
      ShowComboButton =   1
      WordWrap        =   0   'False
      TextStyle       =   0
      TextStyleFixed  =   0
      OleDragMode     =   0
      OleDropMode     =   0
      DataMode        =   0
      VirtualData     =   -1  'True
      DataMember      =   ""
      ComboSearch     =   3
      AutoSizeMouse   =   -1  'True
      FrozenRows      =   0
      FrozenCols      =   0
      AllowUserFreezing=   0
      BackColorFrozen =   0
      ForeColorFrozen =   0
      WallPaperAlignment=   9
      AccessibleName  =   ""
      AccessibleDescription=   ""
      AccessibleValue =   ""
      AccessibleRole  =   24
   End
End
Attribute VB_Name = "frmDockExpense"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Explicit
Public Event Activate() '自已激活时
Public Event RequestRefresh() '要求主窗体刷新
Public Event StatusTextUpdate(ByVal Text As String) '要求更新主窗体状态栏文字

Private WithEvents mfrmParent As Form
Attribute mfrmParent.VB_VarHelpID = -1
Private mcbsMain As Object
Private mMainPrivs As String
Private mrsPrice As ADODB.Recordset '未计费医嘱的主费用

Private Const COLOR_LOST = &HFFEBD7
Private Const COLOR_FOCUS = &HFFCC99

'入口参数
Private mlng执行科室ID As Long
Private mlng医嘱ID As Long  '可能是主ID，也可能是当前选择的部位或方法的医嘱ID
Private mlng相关ID As Long
Private mlng发送号 As Long
Private mblnMoved As Boolean
Private mbln单独执行 As Boolean

'医嘱及病人的其他信息
Private mlng病人ID As Long
Private mlng主页ID As Long
Private mstr挂号单 As String
Private mlng病人科室id As Long
Private mlng病人病区ID As Long
Private mlng开嘱科室ID As Long
Private mint病人来源 As Integer '医嘱记录中的病人来源,1-门诊;2-住院;3-外来;4-体检病人，如果是住院病人发送的门诊记帐单据，当成门诊病人，值为1
Private mstrFeeTab As String    '门诊和住院医生站可发送门诊记帐，存在门诊费用记录中
Private mstr费别 As String
Private mstr诊疗类别 As String
Private mstrNO As String '主费用使用
Private mint记录性质 As Integer '主费用使用,性质为2的可能是门诊记帐费用（门诊或住院医生站可发送门诊记帐）
Private mint执行状态 As Integer
Private mdat发送时间 As Date
Private mstr计费状态 As String
Private mlng计价性质 As Long    '0-正常计价；1-不计价；2-手工计价
Private mint审核标志 As Integer
Private mint结算模式 As Integer

Private mblnPlugIn As Boolean '是否进行了插件初始化
Private mlngPlugInID As Long '自动执行的插件功能ID

Private mblnFirst As Boolean

Private Enum CardProperty
    CP短名 = 0
    CP全名 = 1
    CP可读卡 = 2
    CP卡类别ID = 3
    CP卡号长度 = 4
    CP缺省类别 = 5
    CP存在帐户 = 6
    CP卡号密文显示 = 7
End Enum
Private mbytFontSize As Byte
Public Sub SetFontSize(ByVal bytSize As Byte)
      '---------------------------------------------------------------------------------------------------------------------------------------------
    '功能:设置字体大小
    '入参:bytSize：0-小(缺省)，1-大
    '编制:刘兴洪
    '日期:2012-06-18 16:50:35
    '问题:50793
    '---------------------------------------------------------------------------------------------------------------------------------------------
    mbytFontSize = IIF(bytSize = 0, 9, IIF(bytSize = 1, 12, bytSize))
    '对于vsFlexGrid控件在使用个性化设置时会加大列宽，因此在窗体初次加载是不设置字体,主要是getForm方法引起
    If Not Me.Visible Then
        vsMoney.FontSize = mbytFontSize
        vsDetail.FontSize = mbytFontSize
    End If
    Call ReSetFontSize
End Sub
Private Sub ReSetFontSize()
    '---------------------------------------------------------------------------------------------------------------------------------------------
    '功能:重新设置字体大小
    '编制:刘兴洪
    '日期:2012-06-18 16:52:32
    '---------------------------------------------------------------------------------------------------------------------------------------------
    
    Dim objCtrl As Control
    Me.FontSize = mbytFontSize
    For Each objCtrl In Me.Controls
        Select Case UCase(TypeName(objCtrl))
        Case UCase("TabStrip") '页面控件
            objCtrl.Font.Size = mbytFontSize
        Case UCase("Label")
            objCtrl.FontSize = mbytFontSize
            objCtrl.Height = TextHeight("刘") + 20
        Case UCase("VsFlexGrid")
            Call zlControl.VSFSetFontSize(objCtrl, mbytFontSize)
            objCtrl.FontSize = mbytFontSize
        Case UCase("ComboBox")
            objCtrl.FontSize = mbytFontSize
        Case UCase("OptionButton")
            objCtrl.FontSize = mbytFontSize
            objCtrl.Width = TextWidth("刘兴" & objCtrl.Caption)
        Case UCase("CheckBox")
            objCtrl.FontSize = mbytFontSize
            objCtrl.Width = TextWidth("刘兴" & objCtrl.Caption)
        Case UCase("DTPicker")
            objCtrl.Font.Size = mbytFontSize
            objCtrl.Width = TextWidth("2012-01-01 23:59:59") * 1.25
            objCtrl.Height = TextHeight("刘") * 1.5
            
        Case UCase("CommandButton")
            objCtrl.FontSize = mbytFontSize
        End Select
    Next
    Call Form_Resize
End Sub
Public Sub zlRefresh(ByVal lng科室ID As Long, ByVal lng医嘱ID As Long, ByVal lng发送号 As Long, Optional ByVal blnMoved As Boolean, Optional ByVal bln单独执行 As Boolean)
    Dim rsTmp As New ADODB.Recordset
    Dim StrSQL As String, lngOld医嘱ID As Long
    Dim objControl As CommandBarControl
    
    lngOld医嘱ID = mlng医嘱ID
    
    mlng执行科室ID = lng科室ID
    mlng医嘱ID = lng医嘱ID
    mlng发送号 = lng发送号
    mblnMoved = blnMoved
    mbln单独执行 = bln单独执行
            
    '读取医嘱及病人的其他信息,多部位检查时，传入的医嘱ID可能是主项的ID（相关ID）
    If mlng医嘱ID <> 0 And mlng发送号 <> 0 Then
        On Error GoTo errH
        StrSQL = _
            " Select A.病人ID,A.主页ID,A.挂号单,A.病人科室ID,D.当前病区id,A.开嘱科室ID,A.病人来源,C.结算模式,A.诊疗类别,E.计价性质," & _
            " Decode(A.诊疗类别,'D',Nvl(A.相关ID,A.ID),A.相关ID) as 相关ID,B.NO,B.记录性质,Nvl(B.门诊记帐,0) as 门诊记帐," & _
            " B.执行状态,B.发送时间,Nvl(D.费别,C.费别) as 费别,d.审核标志 " & _
            " From 病人信息 C,病案主页 D,病人医嘱记录 A,病人医嘱发送 B,诊疗项目目录 E" & _
            " Where A.ID=B.医嘱ID And A.ID=[1] And B.发送号=[2] And A.诊疗项目ID=E.ID" & _
            " And A.病人ID=C.病人ID And A.病人ID=D.病人ID(+) And A.主页ID=D.主页ID(+)"
        Set rsTmp = zlDatabase.OpenSQLRecord(StrSQL, "zlRefresh", lng医嘱ID, lng发送号)
        If rsTmp.RecordCount > 0 Then
            mlng病人ID = rsTmp!病人ID
            mlng主页ID = Nvl(rsTmp!主页ID, 0)
            mstr挂号单 = Nvl(rsTmp!挂号单)
            mlng病人科室id = Nvl(rsTmp!病人科室id, 0)
            mlng病人病区ID = Val("" & rsTmp!当前病区ID)
            mlng开嘱科室ID = Nvl(rsTmp!开嘱科室id, 0)
            mint记录性质 = rsTmp!记录性质
            mint审核标志 = Val(rsTmp!审核标志 & "")
            mint结算模式 = Val(rsTmp!结算模式 & "")
            
             '门诊和住院医生站可发送门诊记帐，存在门诊费用记录中
             '以前的门诊医生站发送为门诊记帐时，rsTmp!门诊记帐的值为空，未修正历史数据
             
            mint病人来源 = Nvl(rsTmp!病人来源, 0)
            If mint病人来源 = 2 Then
                If mint记录性质 = 1 Or mint记录性质 = 2 And rsTmp!门诊记帐 = 1 Then
                    mstrFeeTab = "门诊费用记录"
                    mint病人来源 = 1    '当成门诊病人(这种情况一般是门诊留观病人)
                Else
                    mstrFeeTab = "住院费用记录"
                End If
            Else
                mstrFeeTab = "门诊费用记录"
            End If
            
            mlng相关ID = Nvl(rsTmp!相关ID, 0)
            mstr诊疗类别 = Nvl(rsTmp!诊疗类别)
            mstrNO = Nvl(rsTmp!NO)
            mint执行状态 = Nvl(rsTmp!执行状态, 0)
            mdat发送时间 = rsTmp!发送时间
            mstr费别 = Nvl(rsTmp!费别)
            mlng计价性质 = Nvl(rsTmp!计价性质, 0)
            
            mstr计费状态 = GetSendFeeState
            
            '检验组合和多部位检查项目的综合执行状态
            If (mstr诊疗类别 = "C" Or mstr诊疗类别 = "D") And Not mbln单独执行 Then
                StrSQL = "Select 执行状态 From 病人医嘱发送 Where 发送号=[1]" & _
                    " And 医嘱ID IN(Select ID From 病人医嘱记录 Where (ID=[2] Or 相关ID=[2]) And 诊疗类别 In('C','D'))"
                Set rsTmp = zlDatabase.OpenSQLRecord(StrSQL, Me.Name, mlng发送号, IIF(mlng相关ID <> 0, mlng相关ID, mlng医嘱ID))
                StrSQL = ""
                Do While Not rsTmp.EOF
                    If InStr(StrSQL, Nvl(rsTmp!执行状态, 0)) = 0 Then
                        StrSQL = StrSQL & Nvl(rsTmp!执行状态, 0)
                    End If
                    rsTmp.MoveNext
                Loop
                mint执行状态 = IIF(Len(StrSQL) = 1, Val(StrSQL), 3)
            End If
        End If
        On Error GoTo 0
    End If
        
    '刷新数据
    Call RefreshData
        
    '执行自动插件功能：mlng医嘱ID=0也调用，以实现如关闭界面
    If mlngPlugInID <> 0 And lngOld医嘱ID <> mlng医嘱ID Then
        Set objControl = mcbsMain.FindControl(, mlngPlugInID, , True)
        If Not objControl Is Nothing Then
            objControl.Execute
        End If
    End If
    
    Exit Sub
errH:
    If ErrCenter() = 1 Then Resume
    Call SaveErrLog
End Sub

Public Sub zlDefCommandBars(ByVal frmParent As Object, ByVal cbsMain As Object, ByRef objSquareCard As Object)
    Dim objMenu As CommandBarPopup
    Dim objBar As CommandBar
    Dim objPopup As CommandBarPopup
    Dim objControl As CommandBarControl
    
    Set mfrmParent = frmParent
    If cbsMain Is Nothing Then Exit Sub
    
    If Not mblnFirst Then
        mblnFirst = True
        If objSquareCard Is Nothing Then
            Set gobjSquareCard = CreateObject("zl9CardSquare.clsCardSquare")
            If gobjSquareCard.zlInitComponents(Me, p医嘱附费管理, glngSys, gstrDBUser, gcnOracle, False) = False Then
                Set gobjSquareCard = Nothing
                MsgBox "医疗卡部件（zl9CardSquare）初始化失败!", vbInformation, gstrSysName
            End If
        Else
            Set gobjSquareCard = objSquareCard
        End If
    
        Set mcbsMain = cbsMain
        Set cbsMain.Icons = zlCommFun.GetPubIcons
    End If
    
    '医嘱菜单:放在管理菜单(主窗体可能没有)、文件菜单后面
    '-----------------------------------------------------
    Set objMenu = cbsMain.ActiveMenuBar.Controls.Find(, conMenu_ManagePopup)
    If objMenu Is Nothing Then
        Set objMenu = cbsMain.ActiveMenuBar.Controls.Find(, conMenu_FilePopup)
    End If
    Set objMenu = cbsMain.ActiveMenuBar.Controls.Add(xtpControlPopup, conMenu_EditPopup, "费用(&M)", objMenu.Index + 1, False)
    objMenu.ID = conMenu_EditPopup
    With objMenu.CommandBar.Controls
        Set objControl = .Add(xtpControlButton, conMenu_Edit_Append, "生成主费用(&N)") '不计价时显示为:补充主费用,手工计价时显示为:生成主费用
        Set objPopup = .Add(xtpControlSplitButtonPopup, conMenu_Edit_NewItem, "补充附加费用(&A)")
        Set objControl = .Add(xtpControlButton, conMenu_Edit_Modify, "修改费用(&M)"): objControl.BeginGroup = True
        Set objControl = .Add(xtpControlButton, conMenu_Edit_Delete, "删除费用(&D)")
        Set objControl = .Add(xtpControlButton, conMenu_Edit_ExtraFeeMove, "附费转移(&T)")
        objControl.IconId = conMenu_Edit_CollectMan
        Set objControl = .Add(xtpControlButton, conMenu_Edit_ExtraFeeExe, "附费执行(&E)"): objControl.BeginGroup = True
        Set objControl = .Add(xtpControlButton, conMenu_Edit_ExtraFeeUnExe, "附费取消执行(&F)")
        
        Set objControl = .Add(xtpControlButton, conMenu_Edit_ChargeDelApply, "销帐申请(&L)"): objControl.BeginGroup = True
        Set objControl = .Add(xtpControlButton, conMenu_Edit_ChargeDelAudit, "销帐审核(&U)")
        
    End With
    
    '工具菜单:主窗体可能没有,放在帮助菜单前面
    '-----------------------------------------------------
    Set objMenu = cbsMain.ActiveMenuBar.Controls.Find(, conMenu_ToolPopup)
    If objMenu Is Nothing Then
        Set objMenu = cbsMain.ActiveMenuBar.Controls.Find(, conMenu_HelpPopup)
        Set objMenu = cbsMain.ActiveMenuBar.Controls.Add(xtpControlPopup, conMenu_ToolPopup, "工具(&T)", objMenu.Index, False)
        objMenu.ID = conMenu_ToolPopup
    End If
    With objMenu.CommandBar.Controls
        Set objControl = .Add(xtpControlButton, conMenu_Tool_Option, "医嘱附费选项(&O)"): objControl.BeginGroup = True
        objControl.IconId = conMenu_File_Parameter
    End With

    '工具栏定义:从文件及管理菜单的命令按钮之后开始加入
    '-----------------------------------------------------
    Set objBar = cbsMain(2)
    For Each objControl In objBar.Controls '先求出前面的最后一个Control
        If Val(Left(objControl.ID, 1)) <> conMenu_FilePopup And Val(Left(objControl.ID, 1)) <> conMenu_ManagePopup Then
            Set objControl = objBar.Controls(objControl.Index - 1): Exit For
        End If
    Next
    With objBar.Controls
        'Set objControl = .Find(, conMenu_File_Preview) '从预览按钮之后开始加入
        Set objControl = .Add(xtpControlButton, conMenu_Edit_Append, "生成主费", objControl.Index + 1): objControl.BeginGroup = True
        Set objPopup = .Add(xtpControlSplitButtonPopup, conMenu_Edit_NewItem, "补附费", objControl.Index + 1): objPopup.BeginGroup = True
            objPopup.ID = conMenu_Edit_NewItem: objPopup.IconId = conMenu_Edit_NewItem
        Set objControl = .Add(xtpControlButton, conMenu_Edit_Modify, "改费", objPopup.Index + 1)
        Set objControl = .Add(xtpControlButton, conMenu_Edit_Delete, "删费", objControl.Index + 1)
                
        Set objControl = .Add(xtpControlButton, conMenu_Edit_ExtraFeeExe, "附费执行", objControl.Index + 1): objControl.BeginGroup = True
        objControl.IconId = conMenu_Edit_Leave_Modify
        Set objControl = .Add(xtpControlButton, conMenu_Edit_ExtraFeeUnExe, "取消执行", objControl.Index + 1)
        objControl.IconId = conMenu_Edit_Leave_Delete
    End With
    
    '命令的快键绑定
    '-----------------------------------------------------
    With cbsMain.KeyBindings
        .Add FCONTROL, vbKeyE, conMenu_Edit_Append '生成主费用
        .Add FCONTROL, vbKeyM, conMenu_Edit_Modify '修改附加费用
        .Add FSHIFT, vbKeyDelete, conMenu_Edit_Delete '删除附加费用
    End With

    '设置不常用命令
    '-----------------------------------------------------
    With cbsMain.Options
    End With
    
    
    '外挂程序对象初始化
    If Not mblnPlugIn Then
        mblnPlugIn = True
        Call CreatePlugInOK(p医嘱附费管理)
    End If
    
    Call DefCommandPlugIn(cbsMain)
End Sub

Private Sub DefCommandPlugIn(ByVal cbsMain As Object)
    Dim objMenu As CommandBarPopup
    Dim objBar As CommandBar
    Dim objPopup As CommandBarPopup
    Dim objControl As CommandBarControl
    Dim strFuncName As String, lngFuncID As Long
    Dim strFunc As String, i As Long
    
    If Not CreatePlugInOK(p医嘱附费管理) Then Exit Sub
    On Error Resume Next
    strFunc = gobjPlugIn.GetFuncNames(glngSys, p医嘱附费管理)
    Call zlPlugInErrH(err, "GetFuncNames")
    err.Clear: On Error GoTo 0
    If strFunc = "" Then Exit Sub
    
    '增加菜单部分
    Set objMenu = cbsMain.ActiveMenuBar.Controls.Find(, conMenu_ToolPopup)
    If Not objMenu Is Nothing Then
        With objMenu.CommandBar.Controls
            Set objPopup = .Add(xtpControlButtonPopup, conMenu_Tool_PlugIn, "扩展功能", 1, False)
            With objPopup.CommandBar.Controls
                For i = 0 To UBound(Split(strFunc, ","))
                    lngFuncID = conMenu_Tool_PlugIn_Item + i + 1
                    strFuncName = Split(strFunc, ",")(i)
                
                    If UCase(strFuncName) Like UCase("Auto:*") Then
                        strFuncName = Mid(strFuncName, 6)
                        mlngPlugInID = lngFuncID
                    End If
                    
                    Set objControl = .Add(xtpControlButton, lngFuncID, strFuncName)
                    If i <= 9 Then objControl.Caption = objControl.Caption & "(&" & IIF(i = 9, 0, i + 1) & ")"
                    objControl.IconId = conMenu_Tool_PlugIn_Item
                    objControl.Parameter = strFuncName
                Next
            End With
            
            If .Count > 1 Then .Item(2).BeginGroup = True
        End With
    End If
    
    '增加工具栏部分
    '工具栏定义:在帮助按钮前面加入
    '-----------------------------------------------------
    Set objBar = cbsMain(2)
    Set objControl = objBar.FindControl(, conMenu_Help_Help)
    If Not objControl Is Nothing Then
        objControl.BeginGroup = True
        i = objControl.Index
    Else
        i = -1
    End If
    Set objPopup = objBar.Controls.Add(xtpControlPopup, conMenu_Tool_PlugIn, "扩展功能", i, False)
    objPopup.ID = conMenu_Tool_PlugIn
    objPopup.IconId = conMenu_Tool_PlugIn
    objPopup.BeginGroup = True
    With objPopup.CommandBar.Controls
        For i = 0 To UBound(Split(strFunc, ","))
            lngFuncID = conMenu_Tool_PlugIn_Item + i + 1
            strFuncName = Split(strFunc, ",")(i)
        
            If UCase(strFuncName) Like UCase("Auto:*") Then
                strFuncName = Mid(strFuncName, 6)
            End If
        
            Set objControl = .Add(xtpControlButton, lngFuncID, strFuncName)
            If i <= 9 Then objControl.Caption = objControl.Caption & "(&" & IIF(i = 9, 0, i + 1) & ")"
            objControl.IconId = conMenu_Tool_PlugIn_Item
            objControl.Parameter = strFuncName
        Next
    End With
End Sub

Public Sub zlExecuteCommandBars(ByVal Control As CommandBarControl)
    Dim strNO As String
    
    Select Case Control.ID
    Case conMenu_File_PrintSet '打印设置
        Call zlPrintSet
    Case conMenu_File_Preview '预览费用清单
        Call OutputList(2)
    Case conMenu_File_Print '打印费用清单
        Call OutputList(1)
    Case conMenu_File_Excel '输出费用清单
        Call OutputList(3)
    Case conMenu_Help_Help '帮助
        Call ShowHelp(App.ProductName, Me.Hwnd, Me.Name, Int((glngSys) / 100))
    Case conMenu_Edit_Append '生成主费用
        If InStr(mstr计费状态, ",-1,") > 0 Then
            Call FuncFeeMainAppend
        Else
            Call FuncFeeMain
        End If
    Case conMenu_Edit_NewItem * 10# + 1 '补费:收费单据
        Call FuncFeeNewPrice
    Case conMenu_Edit_NewItem * 10# + 2 '补费:记帐单据
        Call FuncFeeNewBilling
    Case conMenu_Edit_NewItem * 10# + 3 '补费:零耗费用
        Call FuncFeeNewNull
    Case conMenu_Edit_NewItem * 10# + 4  '补费:备份卫材划价收费
           Call FuncStuffCharge(1)
    Case conMenu_Edit_NewItem * 10# + 5 ''备份卫材记帐
           Call FuncStuffCharge(2)
    Case conMenu_Edit_Modify '修改附费
        Call FuncFeeModi
    Case conMenu_Edit_Delete '删除附费
        Call FuncFeeDel
    Case conMenu_Edit_ExtraFeeMove '附费转移
        Call FuncExtraFeeMove
    Case conMenu_Edit_ExtraFeeExe   '附费执行
        Call FuncExtraFeeExe(1)
    Case conMenu_Edit_ExtraFeeUnExe '附费取消执行
        Call FuncExtraFeeExe(0)
    
    Case conMenu_Edit_ChargeDelApply, conMenu_Edit_ChargeDelAudit '销帐申请审核
        Call FuncAdviceReCharge(Control.ID)
    Case conMenu_Tool_Option '医嘱附费选项
        frmExpenseSetup.mMainPrivs = mMainPrivs
        frmExpenseSetup.Show 1, mfrmParent
        If frmExpenseSetup.mblnOK Then
            '刷新费用明细
            Call LoadBillDetail(vsMoney.Row)
        End If
    Case conMenu_Tool_PlugIn_Item + 1 To conMenu_Tool_PlugIn_Item + 99 '外挂功能执行
        If CreatePlugInOK(p医嘱附费管理) Then
            strNO = vsMoney.TextMatrix(vsMoney.Row, vsMoney.ColIndex("单据号"))
            On Error Resume Next
            Call gobjPlugIn.ExecuteFunc(glngSys, p医嘱附费管理, Control.Parameter, _
                mlng病人ID, IIF(mstr挂号单 = "", mlng主页ID, mstr挂号单), mlng医嘱ID, strNO)
            Call zlPlugInErrH(err, "ExecuteFunc")
            err.Clear: On Error GoTo 0
        End If
    Case Else
    End Select
End Sub

Public Sub zlUpdateCommandBars(ByVal Control As CommandBarControl)
    Dim blnEnabled As Boolean
    
    If vsMoney.Redraw = flexRDNone Then Exit Sub
    '根据权限设置按钮可见状态
    Call SetControlVisible(Control)
    If Not Control.Visible Then Exit Sub
    
    Select Case Control.ID
    Case conMenu_File_Preview, conMenu_File_Print, conMenu_File_Excel '输出费用清单
        Control.Enabled = vsMoney.TextMatrix(1, 0) <> ""
    Case conMenu_Edit_Append
        If InStr(mstr计费状态, ",-1,") > 0 Then
            Control.Enabled = mlng医嘱ID <> 0 And (mint执行状态 = 0 Or mint执行状态 = 3)
            If Control.Parent Is mcbsMain(2) Then
                Control.Caption = "补充主费"
            Else
                Control.Caption = "补充主费用(&N)"
            End If
        Else
            blnEnabled = Not mrsPrice Is Nothing
            If blnEnabled Then blnEnabled = mrsPrice.RecordCount <> 0
            Control.Enabled = mlng医嘱ID <> 0 And (mint执行状态 = 0 Or mint执行状态 = 3) And InStr(mstr计费状态, ",0,") > 0 And blnEnabled
            If Control.Parent Is mcbsMain(2) Then
                Control.Caption = "生成主费"
            Else
                Control.Caption = "生成主费用(&N)"
            End If
        End If
    Case conMenu_Edit_ExtraFeeMove  '附费转移
        Control.Enabled = mlng医嘱ID <> 0 And vsMoney.TextMatrix(vsMoney.Row, vsMoney.FixedCols) = "附加费用"
    Case conMenu_Edit_ExtraFeeExe   '附费执行
        Control.Enabled = mlng医嘱ID <> 0 And (mint执行状态 = 0 Or mint执行状态 = 3) _
            And vsMoney.TextMatrix(vsMoney.Row, vsMoney.FixedCols) = "附加费用"
    Case conMenu_Edit_ExtraFeeUnExe '附费取消执行
        Control.Enabled = mlng医嘱ID <> 0 And (mint执行状态 = 0 Or mint执行状态 = 3) _
            And vsMoney.TextMatrix(vsMoney.Row, vsMoney.FixedCols) = "附加费用"
    
    Case conMenu_Edit_NewItem
        Control.Enabled = mlng医嘱ID <> 0 And (mint执行状态 = 0 Or mint执行状态 = 3)
    Case conMenu_Edit_Modify
        Control.Enabled = mlng医嘱ID <> 0 And (mint执行状态 = 0 Or mint执行状态 = 3) And _
        (vsMoney.TextMatrix(vsMoney.Row, vsMoney.FixedCols) = "附加费用" Or mlng计价性质 = 1)
    Case conMenu_Edit_Delete
        Control.Enabled = mlng医嘱ID <> 0 And (mint执行状态 = 0 Or mint执行状态 = 3) _
            And (vsMoney.TextMatrix(vsMoney.Row, vsMoney.FixedCols) = "附加费用" Or vsMoney.TextMatrix(vsMoney.Row, vsMoney.FixedCols) = "主费用")
    Case conMenu_Edit_ChargeDelApply, conMenu_Edit_ChargeDelAudit '销帐申请审核
        Control.Enabled = mint病人来源 = 2 And mlng执行科室ID <> 0
    End Select
End Sub

Private Sub SetControlVisible(ByVal Control As CommandBarControl)
'功能：根据权限设置菜单和工具栏的可见状态
    Dim blnVisible As Boolean
    
    '权限只需判断一次,已经判断过的命令不用再判断
    If Control.Category = "已判断" Then Exit Sub

    blnVisible = True
    Select Case Control.ID
    Case conMenu_Edit_Append, conMenu_Edit_NewItem, conMenu_Edit_Modify, conMenu_Edit_Delete, conMenu_Edit_ExtraFeeMove
        If InStr(GetInsidePrivs(p医嘱附费管理), ";补充附加费用;") = 0 Then blnVisible = False
        
    Case conMenu_Edit_NewItem * 10# + 1  '补充收费费用
        If mint病人来源 = 2 Or InStr(GetInsidePrivs(p医嘱附费管理), ";补充收费费用;") = 0 Or mint结算模式 = 1 Then blnVisible = False
    Case conMenu_Edit_NewItem * 10# + 2     '补充记帐费用
        If mint病人来源 = 2 Then
            If InStr(GetInsidePrivs(p医嘱附费管理), ";补充住院记帐费用;") = 0 Then blnVisible = False
        Else
            If InStr(GetInsidePrivs(p医嘱附费管理), ";补充门诊记帐费用;") = 0 Then blnVisible = False
        End If
    Case conMenu_Edit_NewItem * 10# + 3 '补充零耗费用
        If InStr(GetInsidePrivs(p医嘱附费管理), ";补充零耗费用;") = 0 Then blnVisible = False
    Case conMenu_Edit_NewItem * 10# + 5  '备货卫材记帐和收费
        If InStr(GetInsidePrivs(p医嘱附费管理), ";补充备货卫材费用;") = 0 Or mint病人来源 <> 2 Then blnVisible = False
    Case conMenu_Edit_NewItem * 10# + 4     '
        If InStr(GetInsidePrivs(p医嘱附费管理), ";补充备货卫材费用;") = 0 Or mint病人来源 = 2 Then blnVisible = False
    Case conMenu_Edit_ChargeDelApply '销帐申请
        '刘兴洪 问题: 34873   日期:2010-12-22 13:50:07
        '55380
        If InStr(GetInsidePrivs(p医嘱附费管理), ";药品销帐申请;") = 0 _
            And InStr(GetInsidePrivs(p医嘱附费管理), ";卫材销帐申请;") = 0 _
            And InStr(GetInsidePrivs(p医嘱附费管理), ";诊疗销帐申请;") = 0 Then blnVisible = False
    Case conMenu_Edit_ChargeDelAudit '销帐审核
        If InStr(GetInsidePrivs(p医嘱附费管理), ";销帐审核;") = 0 Then blnVisible = False
    End Select
    
    Control.Visible = blnVisible
    Control.Category = "已判断"
End Sub

Public Sub zlPopupCommandBars(ByVal CommandBar As CommandBar)
    Dim objControl As CommandBarControl

    If CommandBar.Parent Is Nothing Then Exit Sub
    
    Select Case CommandBar.Parent.ID
    Case conMenu_Edit_NewItem '补费
        With CommandBar.Controls
            .DeleteAll
            '扩1位,为了使用快捷键
            Set objControl = .Add(xtpControlButton, conMenu_Edit_NewItem * 10# + 1, "收费单据(&1)")
            Set objControl = .Add(xtpControlButton, conMenu_Edit_NewItem * 10# + 2, "记帐单据(&2)")
            Set objControl = .Add(xtpControlButton, conMenu_Edit_NewItem * 10# + 3, "零耗费用(&3)")
            Set objControl = .Add(xtpControlButton, conMenu_Edit_NewItem * 10# + 4, "备货卫材收费(&3)"): objControl.BeginGroup = True
            Set objControl = .Add(xtpControlButton, conMenu_Edit_NewItem * 10# + 5, "备货卫材记帐(&4)")
            With mcbsMain.KeyBindings
                .Add FCONTROL, vbKeyN, conMenu_Edit_NewItem * 10# + 1
                .Add FCONTROL, vbKeyB, conMenu_Edit_NewItem * 10# + 2
                .Add FCONTROL, vbKeyS, conMenu_Edit_NewItem * 10# + 4
            End With
        End With
    End Select
End Sub

Private Sub Form_Load()

    mbytFontSize = 9
    mblnPlugIn = False
    mblnFirst = False
    
    Call InitFeeTable
    Call InitDetailTable
        
    '恢复个性化设置
    '-----------------------------------------------------
    Call RestoreWinState(Me, App.ProductName)
    '计算Split的位置:36053
    If fraBill_S.Top < 500 Or fraBill_S.Top >= Me.ScaleHeight - 500 Then
        
    Else
        vsDetail.Height = Me.ScaleHeight - fraBill_S.Top - fraBill_S.Height
    End If
    
    '变量初始化
    '-----------------------------------------------------
    mMainPrivs = gMainPrivs '主界面模块权限
    Call ReSetFontSize  '重新设置字体
End Sub

Private Sub RefreshData()
'功能：刷新数据
    If mlng医嘱ID = 0 Or mlng发送号 = 0 Then
        Set mrsPrice = Nothing
        vsMoney.Rows = vsMoney.FixedRows
        vsMoney.Rows = vsMoney.FixedRows + 1
        vsDetail.Rows = vsDetail.FixedRows
        vsDetail.Rows = vsDetail.FixedRows + 1
    Else
        Call LoadFeeList
    End If
End Sub

Private Sub InitFeeTable()
    Dim arrHead As Variant, strHead As String, i As Long
    
    strHead = "费用类型,900,1;单据类型,1000,1;单据号,900,1;费别,900,1;应收金额,1000,7;实收金额,1000,7;开单科室,1000,1;开单人,750,1;登记时间,1530,1;登记人,750,1"
    arrHead = Split(strHead, ";")
    With vsMoney
        .Clear
        .FixedRows = 1
        .FixedCols = 0
        .Cols = .FixedCols + UBound(arrHead) + 1
        .Rows = .FixedRows + 1
        
        For i = 0 To UBound(arrHead)
            .TextMatrix(.FixedRows - 1, .FixedCols + i) = Split(arrHead(i), ",")(0)
            If UBound(Split(arrHead(i), ",")) > 0 Then
                .ColWidth(.FixedCols + i) = Val(Split(arrHead(i), ",")(1))
                .ColAlignment(.FixedCols + i) = Val(Split(arrHead(i), ",")(2))
            Else
                .ColHidden(.FixedCols + i) = True
            End If
            .ColKey(.FixedCols + i) = Split(arrHead(i), ",")(0)
        Next
        .Cell(flexcpAlignment, 0, 0, .FixedRows - 1, .Cols - 1) = 4
    End With
End Sub

Private Sub InitDetailTable()
    Dim arrHead As Variant, strHead As String, i As Long
    
    strHead = "类别,650,1;项目,2000,1;数量,1000,1;单价,1000,7;应收金额,1000,7;实收金额,1000,7;执行科室,1000,1;执行状态,1000,1"
    arrHead = Split(strHead, ";")
    With vsDetail
        .Clear
        .FixedRows = 1
        .FixedCols = 0
        .Cols = .FixedCols + UBound(arrHead) + 1
        .Rows = .FixedRows + 1
        
        For i = 0 To UBound(arrHead)
            .TextMatrix(.FixedRows - 1, .FixedCols + i) = Split(arrHead(i), ",")(0)
            If UBound(Split(arrHead(i), ",")) > 0 Then
                .ColWidth(.FixedCols + i) = Val(Split(arrHead(i), ",")(1))
                .ColAlignment(.FixedCols + i) = Val(Split(arrHead(i), ",")(2))
            Else
                .ColHidden(.FixedCols + i) = True
            End If
            .ColKey(.FixedCols + i) = Split(arrHead(i), ",")(0)
        Next
        .Cell(flexcpAlignment, 0, 0, .FixedRows - 1, .Cols - 1) = 4
    End With
End Sub

Private Sub Form_Resize()
    On Error Resume Next
    
    vsMoney.Top = 0
    vsMoney.Left = 0
    vsMoney.Width = Me.ScaleWidth
    vsMoney.Height = Me.ScaleHeight - fraBill_S.Height - vsDetail.Height
    
    fraBill_S.Left = 0
    fraBill_S.Top = vsMoney.Top + vsMoney.Height
    fraBill_S.Width = Me.ScaleWidth
    
    vsDetail.Left = 0
    vsDetail.Top = fraBill_S.Top + fraBill_S.Height
    vsDetail.Width = Me.Width
    
    Me.Refresh
End Sub

Private Sub Form_Unload(Cancel As Integer)
    
    '外挂程序对象终止
    If CreatePlugInOK(p医嘱附费管理) Then
        On Error Resume Next
        Call gobjPlugIn.Terminate(glngSys, p医嘱附费管理)
        Call zlPlugInErrH(err, "Terminate")
        err.Clear: On Error GoTo 0
    End If
    
    Set mrsPrice = Nothing
    SaveWinState Me, App.ProductName
End Sub

Private Sub fraBill_S_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
    If Button = 1 Then
        If vsMoney.Height + Y < 1000 Or vsDetail.Height - Y < 1000 Then Exit Sub
        fraBill_S.Top = fraBill_S.Top + Y
        vsMoney.Height = vsMoney.Height + Y
        vsDetail.Top = vsDetail.Top + Y
        vsDetail.Height = vsDetail.Height - Y
        Me.Refresh
    End If
End Sub

Private Function LoadFeeList() As Boolean
'功能：读取指定医嘱的主要费用及附加费用
'说明：1.包含医嘱本身的主费用及附加费用,主费用可能尚未产生
'      2.目前单据暂不支持部份退费,所以清单中只需简单显示
    Dim rsTmp As New ADODB.Recordset
    Dim rsList As New ADODB.Recordset
    Dim StrSQL As String, strSQL1 As String, i As Long
    Dim blnMain As Boolean, blnSub As Boolean
    Dim strPre As String, lngRow As Long
    Dim cur应收 As Currency, cur实收 As Currency
    Dim str医嘱ID As String, lngMain As Long
    Dim blnDataMoved As Boolean
    
    On Error GoTo errH
    
    blnDataMoved = mblnMoved
    If Not blnDataMoved Then
        blnDataMoved = zlDatabase.DateMoved(mdat发送时间)
    End If
    
    Set mrsPrice = Nothing
    
    '存在未计费状态,直接读取收费关系显示
    If InStr(mstr计费状态, ",0,") > 0 Then
        Call LoadAdvicePrice
        If mrsPrice.RecordCount > 0 Then
            For i = 1 To mrsPrice.RecordCount
                cur应收 = cur应收 + Nvl(mrsPrice!应收, 0)
                cur实收 = cur实收 + Nvl(mrsPrice!实收, 0)
                mrsPrice.MoveNext
            Next
            
            StrSQL = "Select B.名称 as 开嘱科室,Nvl(停嘱医生,开嘱医生) as 开嘱医生,病人来源,开始执行时间 From 病人医嘱记录 A,部门表 B Where A.开嘱科室ID=B.ID And A.ID=[1]"
            If mblnMoved Then
                StrSQL = Replace(StrSQL, "病人医嘱记录", "H病人医嘱记录")
            End If
            Set rsTmp = zlDatabase.OpenSQLRecord(StrSQL, Me.Caption, mlng医嘱ID)
            If Not rsTmp.EOF Then
                StrSQL = "Select " & _
                    " 1 as 费用类型," & mint记录性质 & " as 记录性质,0 as 已收费,'[未计费]' as NO," & _
                    "'" & mstr费别 & "' as 费别," & cur应收 & " as 应收金额," & cur实收 & " as 实收金额," & _
                    "'" & Nvl(rsTmp!开嘱科室) & "' as 开单科室,'" & Nvl(rsTmp!开嘱医生) & "' as 开单人," & _
                    "To_Date('" & Nvl(rsTmp!开始执行时间) & "','YYYY-MM-DD HH24:MI:SS') as 登记时间,'" & IIF(Val(Nvl(rsTmp!病人来源)) = 3, Nvl(rsTmp!开嘱医生), UserInfo.姓名) & "' as 操作员" & _
                    " From Dual"
            Else
                StrSQL = ""
            End If
        End If
    End If
    
    '存在已计费状态,应该可以直接读取主费用部份
    '只有一张单据,可能含其它医嘱费用;
    '显示原始单据信息和剩余部份金额
    If InStr(mstr计费状态, ",1,") > 0 Then
        '包含检查部位，附加手术，检验组合的费用
        If mbln单独执行 Then
            str医嘱ID = "Select [1] From Dual"
        Else
            '多部位检查，包含所有部位和方法的
            str医嘱ID = _
                " Select ID From 病人医嘱记录 Where ID=[1] Or (相关ID=[1] And 诊疗类别 IN('F','D'))" & _
                " Union ALL " & _
                " Select ID From 病人医嘱记录 Where 诊疗类别='C' And 相关ID=[2]"
        End If
        If mblnMoved Then
            str医嘱ID = Replace(str医嘱ID, "病人医嘱记录", "H病人医嘱记录")
        ElseIf blnDataMoved Then
            str医嘱ID = str医嘱ID & " Union ALL " & Replace(str医嘱ID, "病人医嘱记录", "H病人医嘱记录")
        End If
    
        strSQL1 = _
            " Select 1 as 费用类型,A.记录性质,Decode(B.记录状态,0,0,1) as 已收费," & _
            " A.NO,B.费别,Sum(B.应收金额) as 应收金额,Sum(B.实收金额) as 实收金额," & _
            " C.名称 as 开单科室,B.开单人,X.登记时间,Nvl(X.操作员姓名,X.划价人) as 操作员 " & _
            " From 病人医嘱发送 A," & mstrFeeTab & " B,部门表 C," & mstrFeeTab & " X" & _
            " Where A.医嘱ID IN(" & str医嘱ID & ") And A.发送号=[3]" & _
            " And A.NO=B.NO And A.记录性质=B.记录性质 And A.医嘱ID=B.医嘱序号+0 And B.开单部门ID=C.ID" & _
            " And B.NO=X.NO And B.记录性质=X.记录性质 And B.序号=X.序号 And X.记录状态 IN(0,1,3)" & _
            " Group by A.记录性质,Decode(B.记录状态,0,0,1),A.NO,B.费别,C.名称,B.开单人,X.登记时间,Nvl(X.操作员姓名,X.划价人)" & _
            " Having Nvl(Sum(B.应收金额),0)<>0 Or Nvl(Sum(B.实收金额),0)<>0"
        If mblnMoved Then
            strSQL1 = Replace(strSQL1, "病人医嘱发送", "H病人医嘱发送")
            strSQL1 = Replace(strSQL1, mstrFeeTab, "H" & mstrFeeTab)
        ElseIf blnDataMoved Then
            strSQL1 = strSQL1 & " Union ALL " & Replace(strSQL1, mstrFeeTab, "H" & mstrFeeTab)
            strSQL1 = _
                " Select A.费用类型,A.记录性质,A.已收费,A.NO,A.费别," & _
                " Sum(A.应收金额) as 应收金额,Sum(A.实收金额) as 实收金额," & _
                " A.开单科室,A.开单人,A.登记时间,A.操作员 From (" & strSQL1 & ") A" & _
                " Group by A.费用类型,A.记录性质,A.已收费,A.NO,A.费别,A.开单科室,A.开单人,A.登记时间,A.操作员"
        End If
        StrSQL = StrSQL & IIF(StrSQL <> "", " Union ALL ", "") & strSQL1
    End If

    '附费用部份(显示原始单据信息和剩余部份金额)
    '检验项目一并执行和多部位检查时，附费登记到第一个项目上。单独执行时，登记到各个项目上。
    If mbln单独执行 Then
        str医嘱ID = "Select [1] From Dual"
    Else
        '多部位检查，包含所有部位和方法的
        str医嘱ID = _
            " Select ID From 病人医嘱记录 Where ID=[1] Or (相关ID=[1] And 诊疗类别 IN('F','D'))" & _
            " Union ALL " & _
            " Select ID From 病人医嘱记录 Where 诊疗类别='C' And 相关ID=[2]"
    End If
    If mblnMoved Then
        str医嘱ID = Replace(str医嘱ID, "病人医嘱记录", "H病人医嘱记录")
    ElseIf blnDataMoved Then
        str医嘱ID = str医嘱ID & " Union ALL " & Replace(str医嘱ID, "病人医嘱记录", "H病人医嘱记录")
    End If
    
    strSQL1 = _
        " Select 2 as 费用类型,A.记录性质,Decode(B.记录状态,0,0,1) as 已收费," & _
        " A.NO,B.费别,Sum(B.应收金额) as 应收金额,Sum(B.实收金额) as 实收金额," & _
        " C.名称 as 开单科室,B.开单人,X.登记时间,Nvl(X.操作员姓名,X.划价人) as 操作员" & _
        " From 病人医嘱附费 A," & mstrFeeTab & " B,部门表 C," & mstrFeeTab & " X" & _
        " Where A.医嘱ID IN(" & str医嘱ID & ") And A.发送号=[3]" & _
        " And A.NO=B.NO And A.记录性质=B.记录性质 And A.医嘱ID=B.医嘱序号 And B.开单部门ID=C.ID" & _
        " And B.NO=X.NO And B.记录性质=X.记录性质 And B.序号=X.序号 And X.记录状态 IN(0,1,3)" & _
        " Group by A.记录性质,Decode(B.记录状态,0,0,1),A.NO,B.费别,C.名称,B.开单人,X.登记时间,Nvl(X.操作员姓名,X.划价人)" & _
        " Having Nvl(Sum(B.应收金额),0)<>0 Or Nvl(Sum(B.实收金额),0)<>0"
    If mblnMoved Then
        strSQL1 = Replace(strSQL1, "病人医嘱附费", "H病人医嘱附费")
        strSQL1 = Replace(strSQL1, mstrFeeTab, "H" & mstrFeeTab)
    ElseIf blnDataMoved Then
        strSQL1 = strSQL1 & " Union ALL " & Replace(strSQL1, mstrFeeTab, "H" & mstrFeeTab)
        strSQL1 = _
            " Select A.费用类型,A.记录性质,A.已收费,A.NO,A.费别," & _
            " Sum(A.应收金额) as 应收金额,Sum(A.实收金额) as 实收金额," & _
            " A.开单科室,A.开单人,A.登记时间,A.操作员 From (" & strSQL1 & ") A" & _
            " Group by A.费用类型,A.记录性质,A.已收费,A.NO,A.费别,A.开单科室,A.开单人,A.登记时间,A.操作员"
    End If
    StrSQL = StrSQL & IIF(StrSQL <> "", " Union ALL ", "") & strSQL1
    
    StrSQL = "Select * From (" & StrSQL & ") Order by 费用类型,登记时间 Desc"
    
    Set rsList = zlDatabase.OpenSQLRecord(StrSQL, Me.Caption, mlng医嘱ID, mlng相关ID, mlng发送号)
    With vsMoney
        lngRow = .FixedRows
        strPre = .TextMatrix(.Row, .ColIndex("单据类型")) & "_" & .TextMatrix(.Row, .ColIndex("单据号"))
        
        .Redraw = flexRDNone
        .Rows = .FixedRows
        .Rows = .FixedRows + 1
        
        lngMain = -1
        If Not rsList.EOF Then
            .Rows = rsList.RecordCount + 1
            For i = 1 To rsList.RecordCount
                .TextMatrix(i, .ColIndex("费用类型")) = IIF(rsList!费用类型 = 1, "主费用", "附加费用")
                
                '是否该条已收费(仅突出收费单据)
                .TextMatrix(i, .ColIndex("单据类型")) = IIF(rsList!记录性质 = 1, "收费单据" & IIF(rsList!已收费 = 1, "√", ""), "记帐单据")
                If rsList!记录性质 = 1 And rsList!已收费 = 1 Then '已收费蓝色显示
                    .Cell(flexcpForeColor, i, 0, i, .Cols - 1) = &HC00000 '深蓝
                End If
                
                .TextMatrix(i, .ColIndex("单据号")) = rsList!NO
                .TextMatrix(i, .ColIndex("费别")) = Nvl(rsList!费别)
                .TextMatrix(i, .ColIndex("应收金额")) = Format(Nvl(rsList!应收金额, 0), gstrDec)
                .TextMatrix(i, .ColIndex("实收金额")) = Format(Nvl(rsList!实收金额, 0), gstrDec)
                .TextMatrix(i, .ColIndex("开单科室")) = Nvl(rsList!开单科室)
                .TextMatrix(i, .ColIndex("开单人")) = Nvl(rsList!开单人)
                .TextMatrix(i, .ColIndex("登记时间")) = Format(rsList!登记时间, "yyyy-MM-dd HH:mm")
                .TextMatrix(i, .ColIndex("登记人")) = Nvl(rsList!操作员)
                                                
                '附加数据
                .Cell(flexcpData, i, .ColIndex("单据类型")) = CInt(rsList!记录性质)
                .Cell(flexcpData, i, .ColIndex("登记时间")) = Format(rsList!登记时间, "yyyy-MM-dd HH:mm:ss")
                                                
                '是否产生冻结行
                If rsList!费用类型 = 1 Then blnMain = True
                If rsList!费用类型 = 2 Then
                    If blnMain And lngMain = -1 Then lngMain = i - 1
                    blnSub = True
                End If
                
                '定位到原行位置
                If .TextMatrix(i, .ColIndex("单据类型")) & "_" & .TextMatrix(i, .ColIndex("单据号")) = strPre Then lngRow = i
                rsList.MoveNext
            Next
        End If
        If blnMain And blnSub And lngMain <> -1 Then
            .FrozenRows = lngMain
            .Select lngMain, 0, lngMain, .Cols - 1
            .CellBorder &HC00000, 0, 0, 0, 1, 0, 0
        End If
        .Row = lngRow: .Col = .FixedCols
        Call .ShowCell(.Row, .Col)
        .Redraw = flexRDDirect
        
        Call vsMoney_AfterRowColChange(-1, -1, .Row, .Col)
    End With
    LoadFeeList = True
    Exit Function
errH:
    If ErrCenter() = 1 Then Resume
    Call SaveErrLog
End Function

Private Function LoadAdvicePrice() As Boolean
'功能：读取指定医嘱的计价关系到临时记录集
'说明：要计算的项目应该不是叮嘱,院外执行,无需计费
    Dim rsTmp As New ADODB.Recordset
    Dim rsAdvice As New ADODB.Recordset
    Dim dbl数量 As Double, bln附加手术 As Boolean
    Dim StrSQL As String, str医嘱ID As String, strPrice As String
    Dim blnHaveSub As Boolean, lng主收入ID As Long
    Dim cur合计 As Currency, i As Long, j As Long
    
    Set mrsPrice = New ADODB.Recordset
    mrsPrice.Fields.Append "医嘱ID", adBigInt
    mrsPrice.Fields.Append "开嘱科室ID", adBigInt
    mrsPrice.Fields.Append "类别", adVarChar, 1
    mrsPrice.Fields.Append "收费细目ID", adBigInt
    mrsPrice.Fields.Append "计算单位", adVarChar, 100, adFldIsNullable
    mrsPrice.Fields.Append "附加手术", adInteger
    mrsPrice.Fields.Append "执行科室", adInteger
    mrsPrice.Fields.Append "收入项目ID", adBigInt
    mrsPrice.Fields.Append "收据费目", adVarChar, 20, adFldIsNullable
    mrsPrice.Fields.Append "数量", adDouble
    mrsPrice.Fields.Append "单价", adDouble
    mrsPrice.Fields.Append "应收", adCurrency
    mrsPrice.Fields.Append "实收", adCurrency
    mrsPrice.Fields.Append "从项", adInteger
    
    mrsPrice.CursorLocation = adUseClient
    mrsPrice.LockType = adLockOptimistic
    mrsPrice.CursorType = adOpenStatic
    mrsPrice.Open
    
    On Error GoTo errH
            
    '读取要计算主费用的医嘱记录
    '包含检查部位，附加手术，检验组合的费用
    If mbln单独执行 Then
        str医嘱ID = " And B.ID=[1]"
    Else
        str医嘱ID = " And (B.ID=[1] Or (B.相关ID=[1] And B.诊疗类别 IN('F','D')) Or (B.相关ID=[2] And B.诊疗类别='C'))"
    End If
    StrSQL = _
        " Select B.序号,A.医嘱ID,B.相关ID,B.诊疗类别,B.诊疗项目ID,B.开嘱科室ID,A.执行部门ID," & _
        " Nvl(A.发送数次,Sum(Nvl(C.本次数次,0))) as 数量,B.标本部位,B.检查方法,B.执行标记" & _
        " From 病人医嘱发送 A,病人医嘱记录 B,病人医嘱执行 C" & _
        " Where Nvl(A.计费状态,0)=0 " & str医嘱ID & _
        "   And A.医嘱ID=B.ID And A.发送号=[3]" & _
        "   And C.医嘱ID(+)=A.医嘱ID And C.发送号(+)=A.发送号" & _
        " Group by B.序号,A.医嘱ID,B.相关ID,B.诊疗类别,B.诊疗项目ID,B.开嘱科室ID," & _
        " A.执行部门ID,A.发送数次,B.标本部位,B.检查方法,B.执行标记" & _
        " Having Nvl(A.发送数次,Sum(Nvl(C.本次数次,0)))<>0" & _
        " Order by 序号"
    If mblnMoved Then
        StrSQL = Replace(StrSQL, "病人医嘱记录", "H病人医嘱记录")
        StrSQL = Replace(StrSQL, "病人医嘱发送", "H病人医嘱发送")
        StrSQL = Replace(StrSQL, "病人医嘱执行", "H病人医嘱执行")
    End If
    Set rsAdvice = zlDatabase.OpenSQLRecord(StrSQL, Me.Caption, mlng医嘱ID, mlng相关ID, mlng发送号)

    For i = 1 To rsAdvice.RecordCount
        dbl数量 = Nvl(rsAdvice!数量, 0)
        
        '读取对应的收费价目:只读取固定对照,且不是变价的对照
        bln附加手术 = (rsAdvice!诊疗类别 = "F" And Not IsNull(rsAdvice!相关ID))
        '由于没有加部位等条件，所以要用Distinct
        strPrice = "Select * From (" & _
            "Select Distinct C.诊疗项目ID,C.收费项目ID,C.检查部位,C.检查方法,C.费用性质,C.收费数量,C.固有对照,C.从属项目,C.收费方式,c.适用科室id" & _
            " ,Max(Nvl(c.适用科室id, 0)) Over(Partition By c.诊疗项目id, c.检查部位, c.检查方法, c.费用性质) As Top" & _
            " From 诊疗收费关系 C Where C.诊疗项目ID=[1]" & _
            "      And (C.适用科室ID is Null And C.病人来源 = 0 or C.适用科室ID = [6] And C.病人来源 = [7])" & _
            " ) Where Nvl(适用科室id, 0) = Top"
                           
        StrSQL = _
            " Select Nvl(A.从属项目,0) as 从项,A.收费项目ID,A.收费数量,B.收入项目ID,D.收据费目," & _
            " C.类别,C.计算单位,C.执行科室,Decode(C.是否变价,1,B.缺省价格,B.现价) as 单价,C.屏蔽费别," & _
            IIF(bln附加手术, "Nvl(B.附术收费率,100)/100", "1") & " as 附术率" & _
            " From (" & strPrice & ") A,收费价目 B,收费项目目录 C,收入项目 D," & _
            " (Select [1] as 诊疗项目ID,Decode([2],0,Null,[2]) as 相关ID," & _
                " Decode([3],'None',Null,[3]) as 标本部位,Decode([4],'None',Null,[4]) as 检查方法,[5] as 执行标记 From Dual) X" & _
            " Where A.诊疗项目ID=X.诊疗项目ID" & _
                " And (X.相关ID is Null And X.执行标记 IN(1,2) And A.费用性质=1" & _
                "       Or X.标本部位=A.检查部位 And X.检查方法=A.检查方法 And Nvl(A.费用性质,0)=0" & _
                "       Or X.检查方法 is Null And Nvl(A.费用性质,0)=0 And A.检查部位 is Null And A.检查方法 is Null)" & _
            " And A.收费项目ID=B.收费细目ID And A.收费项目ID=C.ID And B.收入项目ID=D.ID" & _
            " And (C.撤档时间=To_Date('3000-01-01','YYYY-MM-DD') Or C.撤档时间 is NULL)" & _
            " And (C.站点='" & gstrNodeNo & "' Or C.站点 is Null)" & _
            " And ((Sysdate Between B.执行日期 and B.终止日期) or (Sysdate>=B.执行日期 And B.终止日期 is NULL))" & _
            " And Nvl(A.固有对照,0)=1 And Nvl(C.是否变价,0)=0" & _
            " Order by 从项"
        Set rsTmp = zlDatabase.OpenSQLRecord(StrSQL, Me.Caption, Val(rsAdvice!诊疗项目ID), Val(Nvl(rsAdvice!相关ID, 0)), _
            CStr(Nvl(rsAdvice!标本部位, "None")), CStr(Nvl(rsAdvice!检查方法, "None")), Val(Nvl(rsAdvice!执行标记, 0)), mlng执行科室ID, mint病人来源)
        
        blnHaveSub = False: lng主收入ID = 0: cur合计 = 0
        If Not rsTmp.EOF And gbln从项汇总折扣 Then
            rsTmp.Filter = "从项=1"
            If Not rsTmp.EOF Then blnHaveSub = True
            rsTmp.Filter = "从项=0"
            If Not rsTmp.EOF Then lng主收入ID = rsTmp!收入项目ID
            rsTmp.Filter = 0
        End If
        
        For j = 1 To rsTmp.RecordCount
            mrsPrice.AddNew
            mrsPrice!医嘱ID = rsAdvice!医嘱ID
            mrsPrice!开嘱科室id = rsAdvice!开嘱科室id
            mrsPrice!类别 = rsTmp!类别
            mrsPrice!收费细目ID = rsTmp!收费项目ID
            mrsPrice!计算单位 = Nvl(rsTmp!计算单位)
            mrsPrice!附加手术 = IIF(bln附加手术, 1, 0)
            mrsPrice!执行科室 = Nvl(rsTmp!执行科室, 0)
            mrsPrice!收入项目ID = rsTmp!收入项目ID
            mrsPrice!收据费目 = rsTmp!收据费目
            mrsPrice!单价 = Format(Nvl(rsTmp!单价, 0), gstrDecPrice)
            mrsPrice!数量 = Format(Nvl(rsTmp!收费数量, 0) * dbl数量, "0.00000")
            mrsPrice!应收 = Format(mrsPrice!数量 * mrsPrice!单价 * rsTmp!附术率, gstrDec)
            mrsPrice!从项 = rsTmp!从项
            
            If gbln从项汇总折扣 And blnHaveSub Then
                mrsPrice!实收 = mrsPrice!应收
                cur合计 = cur合计 + mrsPrice!实收
            ElseIf Nvl(rsTmp!屏蔽费别, 0) = 0 Then
                mrsPrice!实收 = Format(ActualMoney(mstr费别, mrsPrice!收入项目ID, mrsPrice!应收, _
                    rsTmp!收费项目ID, Nvl(rsAdvice!执行部门ID, 0), Nvl(rsTmp!收费数量, 0) * dbl数量, 0), gstrDec)
            Else
                mrsPrice!实收 = mrsPrice!应收
            End If
            
            mrsPrice.Update
            rsTmp.MoveNext
        Next
        
        If gbln从项汇总折扣 And blnHaveSub And lng主收入ID <> 0 Then
            cur合计 = Format(ActualMoney(mstr费别, lng主收入ID, cur合计), gstrDec) - cur合计
            mrsPrice.Filter = "从项=0"
            mrsPrice!实收 = Nvl(mrsPrice!实收, 0) + cur合计
            mrsPrice.Update
            mrsPrice.Filter = 0
        End If
        
        rsAdvice.MoveNext
    Next
    If mrsPrice.RecordCount > 0 Then mrsPrice.MoveFirst
    LoadAdvicePrice = True
    Exit Function
errH:
    If ErrCenter() = 1 Then
        Resume
    End If
    Call SaveErrLog
    Set mrsPrice = Nothing
End Function

Private Function LoadBillDetail(ByVal lngRow As Long) As Boolean
'功能：显示单据明细内容
'参数：lngRow=单据清单行
    Dim rsTmp As New ADODB.Recordset
    Dim strNO As String, int记录性质 As Integer
    Dim lng项目ID As Long, int父号 As Integer
    Dim str登记时间 As String, strIDs As String
    Dim StrSQL As String, int来源 As Integer, i As Long
    
    Dim bln药房单位 As Boolean, str药房单位 As String, str药房包装 As String
        
    On Error GoTo errH
    
    If lngRow < vsMoney.FixedRows Then Exit Function
    If mlng医嘱ID = 0 Then Exit Function
        
    vsDetail.Rows = vsDetail.FixedRows
    vsDetail.Rows = vsDetail.FixedRows + 1
    
    With vsMoney
        strNO = .TextMatrix(lngRow, .ColIndex("单据号"))
        If strNO = "" Then Exit Function
        
        int记录性质 = Val(.Cell(flexcpData, lngRow, .ColIndex("单据类型")))
        int来源 = IIF(mint病人来源 = 2, 2, 1)
        
        '登记时间是为了区分同时存在审核与未审核的情况
        str登记时间 = .Cell(flexcpData, lngRow, .ColIndex("登记时间"))
    End With
    
    '药品单位
    bln药房单位 = Val(zlDatabase.GetPara("药品单位", glngSys, p医嘱附费管理)) <> 0
    If int来源 = 1 Then
        str药房单位 = "门诊单位": str药房包装 = "门诊包装"
    Else
        str药房单位 = "住院单位": str药房包装 = "住院包装"
    End If
    
    If strNO = "[未计费]" Then
        If mrsPrice Is Nothing Then Exit Function
        With mrsPrice
            .MoveFirst
            For i = 1 To .RecordCount
                If lng项目ID <> !收费细目ID Then int父号 = i
                StrSQL = StrSQL & IIF(StrSQL <> "", " Union ALL ", "") & _
                    " Select " & i & " as 序号," & IIF(int父号 = i, "-NULL", int父号) & " as 价格父号," & _
                    "'" & strNO & "' as NO," & int记录性质 & " as 记录性质,1 as 记录状态," & _
                    !医嘱ID & " as 医嘱序号,'" & !类别 & "' as 收费类别," & !收费细目ID & " as 收费细目ID," & _
                    Get收费执行科室ID(mlng病人ID, mlng主页ID, !类别, !收费细目ID, !执行科室, mlng病人科室id, Nvl(!开嘱科室id, 0), int来源) & " as 执行部门ID," & _
                    "0 as 执行状态," & !收入项目ID & " as 收入项目ID,1 as 付数," & !数量 & " as 数次," & !单价 & " as 标准单价," & _
                    !应收 & " as 应收金额," & !实收 & " as 实收金额,To_Date('" & str登记时间 & "','YYYY-MM-DD HH24:MI:SS') as 登记时间 From Dual"
                
                lng项目ID = !收费细目ID
                strIDs = strIDs & "," & !医嘱ID
                .MoveNext
            Next
            If StrSQL = "" Then Exit Function
            StrSQL = "(" & StrSQL & ")"
            strIDs = Mid(strIDs, 2) '取检验组合中涉及的医嘱ID
        End With
    Else
        '包含检查部位，附加手术，检验组合的费用
        If mbln单独执行 Then
            strIDs = "Select ID From 病人医嘱记录 Where ID=[1]"
        Else
            strIDs = _
                " Select ID From 病人医嘱记录 Where ID=[1] Or (相关ID=[1] And 诊疗类别 IN('F','D'))" & _
                " Union ALL " & _
                " Select ID From 病人医嘱记录 Where 诊疗类别='C' And 相关ID=[2]"
        End If
        
        '以原始记录为准求(审核的登记时间和执行状态)
        StrSQL = _
            " Select A.序号,A.价格父号,A.NO,A.记录性质,A.记录状态,A.医嘱序号,A.收费类别,A.收费细目ID," & _
            " A.执行部门ID,B.执行状态,A.收入项目ID,A.付数,A.数次,A.标准单价,A.应收金额,A.实收金额,B.登记时间" & _
            " From " & mstrFeeTab & " A," & mstrFeeTab & " B" & _
            " Where A.NO=B.NO And A.记录性质=B.记录性质 And A.序号=B.序号 And A.记录性质=[3] And A.NO=[4] And B.登记时间=[5]"
        If mblnMoved Then
            StrSQL = Replace(StrSQL, mstrFeeTab, "H" & mstrFeeTab)
            strIDs = Replace(strIDs, "病人医嘱记录", "H病人医嘱记录")
        ElseIf zlDatabase.NOMoved(mstrFeeTab, strNO, "记录性质=", int记录性质) Then
            StrSQL = StrSQL & " Union ALL " & Replace(StrSQL, mstrFeeTab, "H" & mstrFeeTab)
        End If
    End If
    
    '已删除或退费销帐,则不显示
    StrSQL = "Select Nvl(A.价格父号,A.序号) as 序号,C.名称 as 类别,Nvl(F.名称,B.名称)||Decode(B.规格,NULL,NULL,' '||B.规格) as 项目,B.ID as ID," & _
        " A.标准单价" & IIF(bln药房单位, "*Nvl(E." & str药房包装 & ",1)", "") & " as 单价," & _
        " Sum(Nvl(A.付数,1)*A.数次" & IIF(bln药房单位, "/Nvl(E." & str药房包装 & ",1)", "") & ") as 数量," & _
        IIF(bln药房单位, "Decode(E.药品ID,NULL,B.计算单位,E." & str药房单位 & ")", "B.计算单位") & " as 计算单位," & _
        " Sum(A.应收金额) as 应收金额,Sum(A.实收金额) as 实收金额,D.名称 as 执行部门," & _
        " Decode(Nvl(A.执行状态,0),0,'未执行',1,'完全执行',2,'部分执行') as 执行情况,Nvl(A.执行状态,0) as 执行状态,a.收费类别" & _
        " From (" & StrSQL & ") A,收费项目目录 B,收费项目类别 C,部门表 D,药品规格 E,收费项目别名 F" & _
        " Where A.收费细目ID=B.ID And A.收费类别=C.编码 And A.执行部门ID=D.ID(+)" & _
        " And B.ID=E.药品ID(+) And A.收费细目ID=F.收费细目ID(+)" & _
        " And F.码类(+)=1 And F.性质(+)=[6] And A.医嘱序号+0 IN(" & strIDs & ")" & _
        " Group by Nvl(A.价格父号,A.序号),C.名称,B.ID ,Nvl(F.名称,B.名称),B.规格,B.计算单位,D.名称," & _
        " A.标准单价,Nvl(A.执行状态,0),a.收费类别,E.药品ID,Nvl(E." & str药房包装 & ",1),E." & str药房单位 & _
        " Having Nvl(Sum(A.应收金额),0)<>0 Or Nvl(Sum(A.实收金额),0)<>0" & _
        " Order by Nvl(A.价格父号,A.序号)"
        
    Set rsTmp = zlDatabase.OpenSQLRecord(StrSQL, Me.Caption, mlng医嘱ID, _
        mlng相关ID, int记录性质, strNO, CDate(str登记时间), IIF(gbyt药品名称显示 = 0, 1, 3))
    With vsDetail
        .Redraw = flexRDNone
        If Not rsTmp.EOF Then
            .Rows = rsTmp.RecordCount + .FixedRows
            For i = 1 To rsTmp.RecordCount
                .RowData(i) = Val("" & rsTmp!序号)
                .TextMatrix(i, .ColIndex("类别")) = rsTmp!类别
                .TextMatrix(i, .ColIndex("项目")) = rsTmp!项目
                .TextMatrix(i, .ColIndex("数量")) = FormatEx(rsTmp!数量, 5) & " " & Nvl(rsTmp!计算单位)
                .TextMatrix(i, .ColIndex("单价")) = Format(rsTmp!单价, gstrDecPrice)
                .TextMatrix(i, .ColIndex("应收金额")) = Format(rsTmp!应收金额, gstrDec)
                .TextMatrix(i, .ColIndex("实收金额")) = Format(rsTmp!实收金额, gstrDec)
                .TextMatrix(i, .ColIndex("执行科室")) = Nvl(rsTmp!执行部门)
                .TextMatrix(i, .ColIndex("执行状态")) = Nvl(rsTmp!执行情况)
                .Cell(flexcpData, i, .ColIndex("项目")) = "" & rsTmp!ID
                .Cell(flexcpData, i, .ColIndex("类别")) = "" & rsTmp!收费类别
                .Cell(flexcpData, i, .ColIndex("执行状态")) = Val("" & rsTmp!执行状态)
                rsTmp.MoveNext
            Next
        End If
        .Row = .FixedRows: .Col = .FixedCols
        .Redraw = flexRDDirect
    End With
    
    LoadBillDetail = True
    Exit Function
errH:
    If ErrCenter() = 1 Then
        Resume
    End If
    Call SaveErrLog
End Function

Private Sub OutputList(bytStyle As Byte)
'功能：输出费用清单
'参数：bytStyle=1-打印,2-预览,3-输出到Excel
    Dim rsTmp As New ADODB.Recordset
    Dim StrSQL As String

    Dim objOut As New zlPrint1Grd
    Dim objRow As zlTabAppRow
    Dim bytR As Byte, i As Long
    Dim lngRow As Long, lngCol As Long
    Dim strWidth As String
    
    If mlng病人ID = 0 Then Exit Sub
    StrSQL = "Select Nvl(Nvl(B.姓名, C.姓名), A.姓名) 姓名, Nvl(Nvl(B.性别, C.性别), A.性别) 性别, Nvl(Nvl(B.年龄, C.年龄), A.年龄) 年龄, A.门诊号, B.住院号" & vbNewLine & _
            "From 病人信息 A, 病案主页 B, 病人挂号记录 C" & vbNewLine & _
            "Where A.病人id = B.病人id(+) And B.主页id(+) = [2] And A.病人id = C.病人id(+) And A.门诊号 = C.门诊号(+) And A.病人id = [1]"

    On Error GoTo errH
    Set rsTmp = zlDatabase.OpenSQLRecord(StrSQL, Me.Name, mlng病人ID, mlng主页ID)
    If rsTmp.EOF Then Exit Sub
    
    '表头
    objOut.Title.Text = "医院附费清单"
    objOut.Title.Font.Name = "楷体_GB2312"
    objOut.Title.Font.Size = 18
    objOut.Title.Font.Bold = True
    
    '表上
    Set objRow = New zlTabAppRow
    objRow.Add "病人：" & Nvl(rsTmp!姓名) & " 性别：" & Nvl(rsTmp!性别) & " 年龄：" & Nvl(rsTmp!年龄)
    If mlng主页ID <> 0 Then
        objRow.Add "住院号：" & Nvl(rsTmp!住院号)
    Else
        objRow.Add "门诊号：" & Nvl(rsTmp!门诊号)
    End If
    objOut.UnderAppRows.Add objRow
    
    '表下
    Set objRow = New zlTabAppRow
    objRow.Add "打印人：" & UserInfo.姓名
    objRow.Add "打印日期：" & Format(zlDatabase.Currentdate(), "yyyy年MM月dd日")
    objOut.BelowAppRows.Add objRow
    
    '表体
    Set objOut.Body = vsMoney
    
    '输出
    vsMoney.Redraw = False
    lngRow = vsMoney.Row: lngCol = vsMoney.Col
        
    strWidth = ""
    For i = 0 To vsMoney.Cols - 1
        strWidth = strWidth & "," & vsMoney.ColWidth(i)
        If i <= vsMoney.FixedCols - 1 Or vsMoney.ColHidden(i) Then
            vsMoney.ColWidth(i) = 0
        End If
    Next
        
    If bytStyle = 1 Then
        bytR = zlPrintAsk(objOut)
        Me.Refresh
        If bytR <> 0 Then zlPrintOrView1Grd objOut, bytR
    Else
        zlPrintOrView1Grd objOut, bytStyle
    End If
    
    strWidth = Mid(strWidth, 2)
    For i = 0 To vsMoney.Cols - 1
        vsMoney.ColWidth(i) = Split(strWidth, ",")(i)
    Next
    vsMoney.Row = lngRow: vsMoney.Col = lngCol
    vsMoney.Redraw = True
    Exit Sub
errH:
    If ErrCenter() = 1 Then
        Resume
    End If
    Call SaveErrLog
End Sub

Private Sub vsDetail_GotFocus()
    vsDetail.BackColorSel = COLOR_FOCUS
End Sub

Private Sub vsDetail_LostFocus()
    vsDetail.BackColorSel = COLOR_LOST
End Sub

Private Sub vsMoney_AfterRowColChange(ByVal OldRow As Long, ByVal OldCol As Long, ByVal NewRow As Long, ByVal NewCol As Long)
    If NewRow = OldRow Or vsMoney.Redraw = flexRDNone Then Exit Sub
    If NewCol >= vsMoney.FixedCols And NewRow >= vsMoney.FixedRows Then
        vsMoney.ForeColorSel = vsMoney.Cell(flexcpForeColor, NewRow, 0)
        Call LoadBillDetail(NewRow)
    End If
End Sub

Private Sub vsMoney_DblClick()
    If vsMoney.MouseRow >= vsMoney.FixedRows Then
        Call vsMoney_KeyPress(13)
    End If
End Sub

Private Sub vsMoney_GotFocus()
    vsMoney.BackColorSel = COLOR_FOCUS
End Sub

Private Sub vsMoney_KeyPress(KeyAscii As Integer)
'功能：查阅单据
    Dim int记录性质 As Integer
    Dim strNO As String, strTime As String
    
    If KeyAscii = 13 Or KeyAscii = 32 Then
        KeyAscii = 0
        With vsMoney
            strNO = .TextMatrix(.Row, 2)
            If strNO = "" Or strNO = "[未计费]" Then Exit Sub
            int记录性质 = .Cell(flexcpData, .Row, 1)
            strTime = .Cell(flexcpData, .Row, 8)
        End With
        
        frmTechnicExpense.mstrPrivs = GetInsidePrivs(p医嘱附费管理)
        frmTechnicExpense.mbytInState = 1
        frmTechnicExpense.mstrInNO = strNO
        frmTechnicExpense.mstrTime = strTime
        frmTechnicExpense.mint病人来源 = IIF(mint病人来源 = 2, 2, 1)
        frmTechnicExpense.mint记录性质 = int记录性质
        
        On Error Resume Next
        frmTechnicExpense.Show 1, Me
    End If
End Sub

Private Sub vsMoney_LostFocus()
    vsMoney.BackColorSel = COLOR_LOST
End Sub

Private Sub FuncFeeMainAppend()
    If mlng医嘱ID = 0 Then Exit Sub
    
    If mint执行状态 = 1 Then
        MsgBox "该执行项目已经执行完成，不能再继续操作。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    If mblnMoved Then
        MsgBox "该病人的本次" & IIF(mint病人来源 = 2, "住院", "就诊") & "数据已经转出到后备数据库，不允许操作。" & vbCrLf & _
            "您可以与系统管理员联系，将相应数据抽选返回。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    frmTechnicExpense.mstrPrivs = GetInsidePrivs(p医嘱附费管理)
    frmTechnicExpense.mbytInState = 0
    frmTechnicExpense.mlng医嘱ID = mlng医嘱ID
    frmTechnicExpense.mlng发送号 = mlng发送号
    frmTechnicExpense.mlng病人ID = mlng病人ID
    frmTechnicExpense.mlng主页ID = mlng主页ID
    frmTechnicExpense.mint病人来源 = IIF(mint病人来源 = 2, 2, 1)
    frmTechnicExpense.mint记录性质 = mint记录性质
    frmTechnicExpense.mlng开单科室ID = mlng开嘱科室ID
    frmTechnicExpense.mlng病人科室id = mlng病人科室id
    frmTechnicExpense.mstrOriginalNO = mstrNO
    
    On Error Resume Next
    frmTechnicExpense.Show 1, Me
    On Error GoTo 0
    If gblnOK Then
        Call zlRefresh(mlng执行科室ID, mlng医嘱ID, mlng发送号, mblnMoved, mbln单独执行)
    End If
End Sub

Private Sub FuncFeeMain()
'功能：生成主费用
    Dim rsPati As New ADODB.Recordset
    Dim rsAdvice As New ADODB.Recordset
    
    Dim int来源 As Integer, lng医嘱ID As Long
    Dim int价格父号 As Integer, lng项目ID As Long, lng执行部门id As Long
    Dim lng病人病区ID As Long, lng病人科室ID As Long, lng类别ID As Long
    Dim arrSQL As Variant, StrSQL As String, strDate As String, i As Long
    Dim int保险项目否 As Integer, lng保险大类ID As Long, str保险编码 As String, cur统筹金额 As Currency, str费用类型 As String
    Dim lng开嘱科室ID As Long, str开嘱医生 As String, int序号 As Integer, strMsg As String
    Dim int父序号 As Integer
    Dim blnTrans  As Boolean
    
    If mlng医嘱ID = 0 Then Exit Sub
    If mrsPrice Is Nothing Then Exit Sub
    If mrsPrice.RecordCount = 0 Then
        MsgBox "该执行项目没有可以计费的主费用。" & vbCrLf & "如果需要，你可以手工补充附加费用。", vbInformation, gstrSysName
        Exit Sub
    End If
    If mint执行状态 = 1 Then
        MsgBox "该执行项目已经执行完成，不能再继续操作。", vbInformation, gstrSysName
        Exit Sub
    End If
    If mblnMoved Then
        MsgBox "该病人的本次" & IIF(mint病人来源 = 2, "住院", "就诊") & "数据已经转出到后备数据库，不允许操作。" & vbCrLf & _
            "您可以与系统管理员联系，将相应数据抽选返回。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    If mint记录性质 = 1 Then
        If BillExistBalance(mstrNO) Then
            MsgBox "单据 " & mstrNO & " 已经收费，不能再生成这张单据的主费用。" & vbCrLf & "如果需要，你可以手工补充附加费用。", vbInformation, gstrSysName
            Exit Sub
        End If
    ElseIf mint记录性质 = 2 Then
        '住院出院病人费用限制
        If mint病人来源 = 2 Then
            If Not PatiCanBilling(mlng病人ID, mlng主页ID, GetInsidePrivs(p医嘱附费管理), p医嘱附费管理) Then Exit Sub
        End If
    End If
    
    If MsgBox("确实要生成该项目的主费用吗？", vbQuestion + vbYesNo + vbDefaultButton2, gstrSysName) = vbNo Then
        Exit Sub
    End If
            
    int来源 = IIF(mint病人来源 = 2, 2, 1)
    
    Screen.MousePointer = 11
    
    '获取病人的信息
    StrSQL = "Select Nvl(Nvl(B.姓名, C.姓名), A.姓名) 姓名, Nvl(Nvl(B.性别, C.性别), A.性别) 性别, Nvl(Nvl(B.年龄, C.年龄), A.年龄) 年龄," & vbNewLine & _
            "       Nvl(B.费别, A.费别) As 费别, A.门诊号, B.住院号, Nvl(A.当前床号, B.出院病床) As 床号, Nvl(A.当前病区id, B.当前病区id) As 病人病区id," & vbNewLine & _
            "       Nvl(A.当前科室id, B.出院科室id) As 病人科室id, Nvl(B.险类, A.险类) As 险类, D.编码 As 付款码" & vbNewLine & _
            "From 病人信息 A, 病案主页 B, 病人挂号记录 C, 医疗付款方式 D" & vbNewLine & _
            "Where A.病人id = B.病人id(+) And B.主页id(+) = [2] And A.病人id = C.病人id(+) And A.门诊号 = C.门诊号(+) And A.医疗付款方式 = D.名称(+) And A.病人id=[1]"

    On Error GoTo errH
    Set rsPati = zlDatabase.OpenSQLRecord(StrSQL, Me.Caption, mlng病人ID, mlng主页ID)
    
    '可能对照费用为药品费用
    If mint记录性质 = 1 Then
        lng类别ID = ExistIOClass(8) '门诊划价单
    Else
        lng类别ID = ExistIOClass(9) '门诊/住院记帐单
    End If
    
    '可能发送时已自动生成了部份主费用,现在是手工生成剩余部份。
    '1.因为单据号相同,所以要保持序号连续
    '2.如果是生成收费划价单，要保证一张单据中登记时间相同(不然收费无法处理)
    '3.第2点的情况，如果部份主费用已经收费，则不允许再生成主费用
    int序号 = GetBillMax序号(mstrNO, mint记录性质, strDate, IIF(mint病人来源 = 2, 2, 1))
    If mint记录性质 = 2 Or strDate = "" Then
        strDate = "To_Date('" & Format(zlDatabase.Currentdate, "yyyy-MM-dd HH:mm:ss") & "','YYYY-MM-DD HH24:MI:SS')"
    Else
        strDate = "To_Date('" & strDate & "','YYYY-MM-DD HH24:MI:SS')"
    End If
    
    arrSQL = Array()
    With mrsPrice
        .MoveFirst
        For i = 1 To .RecordCount
            '获取对应的医嘱信息
            If lng医嘱ID <> !医嘱ID Then
                StrSQL = "Select 医嘱期效,病人科室ID,开嘱科室ID,开嘱医生,婴儿,执行频次,计价特性 From 病人医嘱记录 Where ID=[1]"
                Set rsAdvice = zlDatabase.OpenSQLRecord(StrSQL, Me.Caption, Val(!医嘱ID))
                
                '将当前这条计费医嘱标记为已计费
                ReDim Preserve arrSQL(UBound(arrSQL) + 1)
                arrSQL(UBound(arrSQL)) = "ZL_病人医嘱发送_计费(" & !医嘱ID & "," & mlng发送号 & ")"
                
                int父序号 = 0
            End If
            lng医嘱ID = !医嘱ID
            
            '病人病区科室
            lng病人病区ID = Nvl(rsPati!病人病区ID, 0)
            lng病人科室ID = Nvl(rsPati!病人科室id, 0)
            If lng病人科室ID = 0 Then
                lng病人病区ID = Nvl(rsAdvice!病人科室id, 0)
                lng病人科室ID = Nvl(rsAdvice!病人科室id, 0)
            End If
            If lng病人科室ID = 0 Then
                lng病人病区ID = UserInfo.部门ID
                lng病人科室ID = UserInfo.部门ID
            End If
            
            '开单科室及开单人
            lng开嘱科室ID = rsAdvice!开嘱科室id
            str开嘱医生 = rsAdvice!开嘱医生
            
            '每个收费项目的处理
            If lng项目ID <> !收费细目ID Then
                int价格父号 = int序号 '获取价格父号
                If !从项 = 0 Then int父序号 = int序号  '读取Price时是分医嘱将主项排在前面的
                lng执行部门id = Get收费执行科室ID(mlng病人ID, mlng主页ID, !类别, !收费细目ID, !执行科室, Nvl(rsAdvice!病人科室id, 0), Nvl(rsAdvice!开嘱科室id, 0), int来源)
                            
                '获取保险项目信息
                If int来源 = 2 And Not IsNull(rsPati!险类) Then
                    strMsg = gclsInsure.GetItemInsure(mlng病人ID, !收费细目ID, !实收, False, rsPati!险类, "||" & !数量)
                    If strMsg <> "" Then
                        int保险项目否 = Val(Split(strMsg, ";")(0))
                        lng保险大类ID = Val(Split(strMsg, ";")(1))
                        cur统筹金额 = Format(Val(Split(strMsg, ";")(2)), gstrDec)
                        str保险编码 = CStr(Split(strMsg, ";")(3))
                        If UBound(Split(strMsg, ";")) >= 5 Then
                            If Split(strMsg, ";")(5) <> "" Then
                                str费用类型 = Split(strMsg, ";")(5)
                            End If
                        End If
                    End If
                End If
            End If
            lng项目ID = !收费细目ID
            
            ReDim Preserve arrSQL(UBound(arrSQL) + 1)
            If int来源 = 1 Then
                If mint记录性质 = 1 Then
                    '生成门诊划价单据
                    arrSQL(UBound(arrSQL)) = _
                        "zl_门诊划价记录_Insert('" & mstrNO & "'," & int序号 & "," & mlng病人ID & ",NULL," & _
                        IIF(IsNull(rsPati!门诊号), "NULL", "'" & rsPati!门诊号 & "'") & ",'" & Nvl(rsPati!付款码) & "','" & Nvl(rsPati!姓名) & "'," & _
                        "'" & Nvl(rsPati!性别) & "','" & Nvl(rsPati!年龄) & "','" & Nvl(rsPati!费别) & "',NULL," & _
                        lng病人科室ID & "," & lng开嘱科室ID & ",'" & str开嘱医生 & "'," & _
                        IIF(!从项 = 1, ZVal(int父序号), "NULL") & "," & lng项目ID & ",'" & !类别 & "','" & !计算单位 & "',NULL,1," & !数量 & "," & _
                        !附加手术 & "," & ZVal(lng执行部门id) & "," & IIF(int价格父号 = int序号, "NULL", int价格父号) & "," & _
                        !收入项目ID & ",'" & Nvl(!收据费目) & "'," & !单价 & "," & !应收 & "," & !实收 & "," & _
                        strDate & "," & strDate & ",NULL,'" & UserInfo.姓名 & "'," & ZVal(lng类别ID) & ",NULL," & _
                        !医嘱ID & ",'" & Nvl(rsAdvice!执行频次) & "',NULL,NULL," & Nvl(rsAdvice!医嘱期效, 0) & "," & _
                        Nvl(rsAdvice!计价特性, 0) & ",1)"
                Else
                    '生成门诊记帐单据
                    arrSQL(UBound(arrSQL)) = _
                        "zl_门诊记帐记录_Insert('" & mstrNO & "'," & int序号 & "," & mlng病人ID & "," & _
                        IIF(IsNull(rsPati!门诊号), "NULL", "'" & rsPati!门诊号 & "'") & ",'" & Nvl(rsPati!姓名) & "','" & Nvl(rsPati!性别) & "'," & _
                        "'" & Nvl(rsPati!年龄) & "','" & Nvl(rsPati!费别) & "',NULL," & ZVal(rsAdvice!婴儿) & "," & _
                        lng病人科室ID & "," & lng开嘱科室ID & "," & _
                        "'" & str开嘱医生 & "'," & IIF(!从项 = 1, ZVal(int父序号), "NULL") & "," & lng项目ID & ",'" & !类别 & "'," & _
                        "'" & !计算单位 & "',1," & !数量 & "," & !附加手术 & "," & ZVal(lng执行部门id) & "," & _
                        IIF(int价格父号 = int序号, "NULL", int价格父号) & "," & !收入项目ID & ",'" & Nvl(!收据费目) & "'," & !单价 & "," & _
                        !应收 & "," & !实收 & "," & strDate & "," & strDate & ",NULL,NULL,'" & UserInfo.编号 & "'," & _
                        "'" & UserInfo.姓名 & "'," & ZVal(lng类别ID) & ",NULL,NULL," & !医嘱ID & "," & _
                        "'" & Nvl(rsAdvice!执行频次) & "',NULL,NULL," & Nvl(rsAdvice!医嘱期效, 0) & "," & _
                        Nvl(rsAdvice!计价特性, 0) & ")"
                End If
            Else
                '生成住院记帐单据
                arrSQL(UBound(arrSQL)) = _
                    "zl_住院记帐记录_Insert('" & mstrNO & "'," & int序号 & "," & mlng病人ID & "," & ZVal(mlng主页ID) & "," & _
                    IIF(IsNull(rsPati!住院号), "NULL", "'" & rsPati!住院号 & "'") & ",'" & Nvl(rsPati!姓名) & "','" & Nvl(rsPati!性别) & "'," & _
                    "'" & Nvl(rsPati!年龄) & "','" & Nvl(rsPati!床号) & "','" & Nvl(rsPati!费别) & "'," & _
                    lng病人病区ID & "," & lng病人科室ID & ",NULL," & ZVal(rsAdvice!婴儿) & "," & _
                    lng开嘱科室ID & ",'" & str开嘱医生 & "'," & IIF(!从项 = 1, ZVal(int父序号), "NULL") & "," & lng项目ID & ",'" & !类别 & "'," & _
                    "'" & !计算单位 & "'," & int保险项目否 & "," & ZVal(lng保险大类ID) & ",'" & str保险编码 & "'," & _
                    "1," & !数量 & "," & !附加手术 & "," & ZVal(lng执行部门id) & "," & _
                    IIF(int价格父号 = int序号, "NULL", int价格父号) & "," & !收入项目ID & ",'" & Nvl(!收据费目) & "'," & !单价 & "," & _
                    !应收 & "," & !实收 & "," & cur统筹金额 & "," & strDate & "," & strDate & ",NULL,NULL," & _
                    "'" & UserInfo.编号 & "','" & UserInfo.姓名 & "',NULL," & ZVal(lng类别ID) & ",NULL,NULL,NULL," & _
                    !医嘱ID & ",'" & Nvl(rsAdvice!执行频次) & "',NULL,NULL," & Nvl(rsAdvice!医嘱期效, 0) & "," & _
                    Nvl(rsAdvice!计价特性, 0) & ",NULL,'" & str费用类型 & "')"
            End If
            
            int序号 = int序号 + 1
            
            .MoveNext
        Next
    End With
    On Error GoTo errH
    gcnOracle.BeginTrans: blnTrans = True
    For i = 0 To UBound(arrSQL)
        Call zlDatabase.ExecuteProcedure(CStr(arrSQL(i)), Me.Caption)
    Next
    
    '在提交前进行医保传输
    If int来源 = 2 And Not IsNull(rsPati!险类) Then
        If gclsInsure.GetCapability(support记帐上传, mlng病人ID, rsPati!险类) And Not gclsInsure.GetCapability(support记帐完成后上传, mlng病人ID, rsPati!险类) Then
            strMsg = ""
            If Not gclsInsure.TranChargeDetail(2, mstrNO, 2, 1, strMsg, , rsPati!险类) Then
                gcnOracle.RollbackTrans
                If strMsg <> "" Then MsgBox strMsg, vbInformation, gstrSysName
                Screen.MousePointer = 0: Exit Sub
            End If
        End If
    End If
    
    gcnOracle.CommitTrans: blnTrans = False
    
    '在提交后进行医保传输
    If int来源 = 2 And Not IsNull(rsPati!险类) Then
        If gclsInsure.GetCapability(support记帐上传, mlng病人ID, rsPati!险类) And gclsInsure.GetCapability(support记帐完成后上传, mlng病人ID, rsPati!险类) Then
            strMsg = ""
            If Not gclsInsure.TranChargeDetail(2, mstrNO, 2, 1, strMsg, , rsPati!险类) Then
                If strMsg <> "" Then
                    MsgBox strMsg, vbInformation, gstrSysName
                Else
                    MsgBox "单据""" & mstrNO & """的数据向医保传送失败,该单据已保存！", vbInformation, gstrSysName
                End If
            End If
        End If
    End If
    On Error GoTo 0
    Screen.MousePointer = 0
    
    MsgBox "执行项目的主费用生成成功。", vbInformation, gstrSysName
    
    Call zlRefresh(mlng执行科室ID, mlng医嘱ID, mlng发送号, mblnMoved, mbln单独执行)
    Exit Sub
errH:
    Screen.MousePointer = 0
    If blnTrans Then gcnOracle.RollbackTrans
    If ErrCenter() = 1 Then Resume
    Call SaveErrLog
End Sub

Private Sub FuncFeeNewPrice()
'功能：补充附加收费单据
    If mlng医嘱ID = 0 Then Exit Sub
    
    If mint执行状态 = 1 Then
        MsgBox "该执行项目已经执行完成，不能再继续操作。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    If mblnMoved Then
        MsgBox "该病人的本次" & IIF(mint病人来源 = 2, "住院", "就诊") & "数据已经转出到后备数据库，不允许操作。" & vbCrLf & _
            "您可以与系统管理员联系，将相应数据抽选返回。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    frmTechnicExpense.mstrPrivs = GetInsidePrivs(p医嘱附费管理)
    frmTechnicExpense.mbytInState = 0
    frmTechnicExpense.mlng医嘱ID = mlng医嘱ID
    frmTechnicExpense.mlng发送号 = mlng发送号
    frmTechnicExpense.mlng病人ID = mlng病人ID
    frmTechnicExpense.mlng主页ID = mlng主页ID
    frmTechnicExpense.mint病人来源 = IIF(mint病人来源 = 2, 2, 1)
    frmTechnicExpense.mint记录性质 = 1
    frmTechnicExpense.mlng开单科室ID = mlng执行科室ID
    frmTechnicExpense.mlng病人科室id = mlng病人科室id
    
    On Error Resume Next
    frmTechnicExpense.Show 1, Me
    On Error GoTo 0
    If gblnOK Then
        Call zlRefresh(mlng执行科室ID, mlng医嘱ID, mlng发送号, mblnMoved, mbln单独执行)
    End If
End Sub



Private Sub FuncStuffCharge(ByVal int记录性质 As Integer)
    '---------------------------------------------------------------------------------------------------------------------------------------------
    '功能:备货卫材记帐
    '入参:int记录性质:1-收费(划价),2-记帐(门/住)
    '编制:刘兴洪
    '日期:2010-12-14 13:17:38
    '问题:????
    '---------------------------------------------------------------------------------------------------------------------------------------------
    If mlng医嘱ID = 0 Then Exit Sub
    If mint执行状态 = 1 Then
        MsgBox "该执行项目已经执行完成，不能再继续操作。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    If mblnMoved Then
        MsgBox "该病人的本次" & IIF(mint病人来源 = 2, "住院", "就诊") & "数据已经转出到后备数据库，不允许操作。" & vbCrLf & _
            "您可以与系统管理员联系，将相应数据抽选返回。", vbInformation, gstrSysName
        Exit Sub
    End If
    If frmStuffCharge.zlBillEdit(Me, 0, p医嘱附费管理, GetInsidePrivs(p医嘱附费管理), int记录性质, "", _
        IIF(mint病人来源 = 2, 2, 1), mlng病人ID, mlng主页ID, mlng执行科室ID, mlng病人科室id, _
        0, "", False, "", mlng医嘱ID, mlng发送号, "") = True Then
        Call zlRefresh(mlng执行科室ID, mlng医嘱ID, mlng发送号, mblnMoved, mbln单独执行)
    End If
End Sub
 
Private Sub FuncFeeNewBilling()
    If mlng医嘱ID = 0 Then Exit Sub
    
    If mint执行状态 = 1 Then
        MsgBox "该执行项目已经执行完成，不能再继续操作。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    If mblnMoved Then
        MsgBox "该病人的本次" & IIF(mint病人来源 = 2, "住院", "就诊") & "数据已经转出到后备数据库，不允许操作。" & vbCrLf & _
            "您可以与系统管理员联系，将相应数据抽选返回。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    frmTechnicExpense.mstrPrivs = GetInsidePrivs(p医嘱附费管理)
    frmTechnicExpense.mbytInState = 0
    frmTechnicExpense.mlng医嘱ID = mlng医嘱ID
    frmTechnicExpense.mlng发送号 = mlng发送号
    frmTechnicExpense.mlng病人ID = mlng病人ID
    frmTechnicExpense.mlng主页ID = mlng主页ID
    frmTechnicExpense.mint病人来源 = IIF(mint病人来源 = 2, 2, 1)
    frmTechnicExpense.mint记录性质 = 2
    frmTechnicExpense.mlng开单科室ID = mlng执行科室ID
    frmTechnicExpense.mlng病人科室id = mlng病人科室id
    
    On Error Resume Next
    frmTechnicExpense.Show 1, Me
    On Error GoTo 0
    If gblnOK Then
        Call zlRefresh(mlng执行科室ID, mlng医嘱ID, mlng发送号, mblnMoved, mbln单独执行)
    End If
End Sub

Private Sub FuncFeeNewNull()
    If mlng医嘱ID = 0 Then Exit Sub
    
    If mint执行状态 = 1 Then
        MsgBox "该执行项目已经执行完成，不能再继续操作。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    If mblnMoved Then
        MsgBox "该病人的本次" & IIF(mint病人来源 = 2, "住院", "就诊") & "数据已经转出到后备数据库，不允许操作。" & vbCrLf & _
            "您可以与系统管理员联系，将相应数据抽选返回。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    frmTechnicExpense.mstrPrivs = GetInsidePrivs(p医嘱附费管理)
    frmTechnicExpense.mbytInState = 0
    frmTechnicExpense.mlng医嘱ID = mlng医嘱ID
    frmTechnicExpense.mlng发送号 = mlng发送号
    frmTechnicExpense.mlng病人ID = mlng病人ID
    frmTechnicExpense.mlng主页ID = mlng主页ID
    frmTechnicExpense.mint病人来源 = IIF(mint病人来源 = 2, 2, 1)
    frmTechnicExpense.mint记录性质 = 2
    frmTechnicExpense.mbln费用登记 = True
    frmTechnicExpense.mlng开单科室ID = mlng执行科室ID
    frmTechnicExpense.mlng病人科室id = mlng病人科室id
    
    On Error Resume Next
    frmTechnicExpense.Show 1, Me
    On Error GoTo 0
    If gblnOK Then
        Call zlRefresh(mlng执行科室ID, mlng医嘱ID, mlng发送号, mblnMoved, mbln单独执行)
    End If
End Sub

Private Sub FuncFeeModi()
    Dim bln零耗 As Boolean, strNO As String, int记录性质 As Integer
 
    If mlng医嘱ID = 0 Then Exit Sub
    If vsMoney.TextMatrix(vsMoney.Row, 0) = "主费用" And mlng计价性质 <> 1 Then
        MsgBox "执行项目的主费用不能修改。如果需要，你可以手工补充附加费用。", vbInformation, gstrSysName
        Exit Sub
    End If
    If mint执行状态 = 1 Then
        MsgBox "该执行项目已经执行完成，不能再继续操作。", vbInformation, gstrSysName
        Exit Sub
    End If
    If mblnMoved Then
        MsgBox "该病人的本次" & IIF(mint病人来源 = 2, "住院", "就诊") & "数据已经转出到后备数据库，不允许操作。" & vbCrLf & _
            "您可以与系统管理员联系，将相应数据抽选返回。", vbInformation, gstrSysName
        Exit Sub
    End If

    With vsMoney
        strNO = .TextMatrix(.Row, .ColIndex("单据号"))
        If strNO = "" Or strNO = "[未计费]" Then Exit Sub
        int记录性质 = .Cell(flexcpData, .Row, 1)
        
        If zlDatabase.DateMoved(mdat发送时间) Then
            If zlDatabase.NOMoved(mstrFeeTab, strNO, "记录性质=", int记录性质) Then
                MsgBox "费用单据 " & strNO & " 已经转出到后备数据库，不允许操作。" & vbCrLf & _
                    "您可以与系统管理员联系，将相应数据抽选返回。", vbInformation, gstrSysName
                Exit Sub
            End If
        End If
        If int记录性质 = 2 Then
            If Not BillIdentical(strNO, IIF(mint病人来源 = 2, 2, 1)) Then
                MsgBox "单据""" & strNO & """中包含部份未审核或分多次审核的内容，不允许修改。", vbInformation, gstrSysName
                Exit Sub
            End If
        End If
        If InStr(.TextMatrix(.Row, 1), "√") > 0 Then
            MsgBox "该单据已经收费，不允许修改。", vbInformation, gstrSysName
            Exit Sub
        End If
        If BillExistDelete(strNO, int记录性质, IIF(mint病人来源 = 2, 2, 1)) Then
            MsgBox "该单据包含已" & IIF(int记录性质 = 1, "退费", "销帐") & "费用,不允许修改！", vbInformation, gstrSysName
            Exit Sub
        End If
        '如果包含部分执行或全部执行的项目,则不一定可以全部冲销,不允许修改
        If HaveExecute(strNO, int记录性质, False, IIF(mint病人来源 = 2, 2, 1)) Then
            MsgBox "该单据中包含完全执行或部分执行的项目,不允许修改！", vbInformation, gstrSysName
            Exit Sub
        End If
    End With
    
    If int记录性质 = 2 Then
       bln零耗 = BillisZeroLog(strNO, IIF(mint病人来源 = 2, 2, 1))
    End If
    
    If zlIs备货材料(strNO, int记录性质) Then
        If frmStuffCharge.zlBillEdit(Me, 0, p医嘱附费管理, GetInsidePrivs(p医嘱附费管理), int记录性质, strNO, IIF(mint病人来源 = 2, 2, 1), mlng病人ID, mlng主页ID, _
            mlng执行科室ID, mlng病人科室id, , , , , mlng医嘱ID, mlng发送号) Then
            Exit Sub
        End If
        Call zlRefresh(mlng执行科室ID, mlng医嘱ID, mlng发送号, mblnMoved, mbln单独执行)
        Exit Sub
    Else
        frmTechnicExpense.mstrPrivs = GetInsidePrivs(p医嘱附费管理)
        frmTechnicExpense.mbytInState = 0
        frmTechnicExpense.mbln费用登记 = bln零耗
        frmTechnicExpense.mstrInNO = strNO
        frmTechnicExpense.mlng医嘱ID = mlng医嘱ID
        frmTechnicExpense.mlng发送号 = mlng发送号
        frmTechnicExpense.mlng病人ID = mlng病人ID
        frmTechnicExpense.mlng主页ID = mlng主页ID
        frmTechnicExpense.mint病人来源 = IIF(mint病人来源 = 2, 2, 1)
        frmTechnicExpense.mint记录性质 = int记录性质
        frmTechnicExpense.mlng开单科室ID = mlng执行科室ID
        frmTechnicExpense.mlng病人科室id = mlng病人科室id
        On Error Resume Next
        frmTechnicExpense.Show 1, Me
        On Error GoTo 0
        If gblnOK Then
            Call zlRefresh(mlng执行科室ID, mlng医嘱ID, mlng发送号, mblnMoved, mbln单独执行)
        End If
    End If
End Sub

Private Sub FuncFeeDel()
    Dim strNO As String, int记录性质 As Integer
    
    If mlng医嘱ID = 0 Then Exit Sub
    If mint执行状态 = 1 Then
        MsgBox "该执行项目已经执行完成，不能再继续操作。", vbInformation, gstrSysName
        Exit Sub
    End If
    If mblnMoved Then
        MsgBox "该病人的本次" & IIF(mint病人来源 = 2, "住院", "就诊") & "数据已经转出到后备数据库，不允许操作。" & vbCrLf & _
            "您可以与系统管理员联系，将相应数据抽选返回。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    With vsMoney
        strNO = .TextMatrix(.Row, 2)
        If strNO = "" Or strNO = "[未计费]" Then Exit Sub
        int记录性质 = .Cell(flexcpData, .Row, 1)
                
       If zlDatabase.DateMoved(mdat发送时间) Then
            If zlDatabase.NOMoved(mstrFeeTab, strNO, "记录性质=", int记录性质) Then
                MsgBox "费用单据 " & strNO & " 已经转出到后备数据库，不允许操作。" & vbCrLf & _
                    "您可以与系统管理员联系，将相应数据抽选返回。", vbInformation, gstrSysName
                Exit Sub
            End If
        End If
        
        If int记录性质 = 2 Then
            If Not BillIdentical(strNO, IIF(mint病人来源 = 2, 2, 1)) Then
                MsgBox "单据""" & strNO & """中包含部份未审核或分多次审核的内容，不允许删除。", vbInformation, gstrSysName
                Exit Sub
            End If
            '住院出院病人费用限制
            If mint病人来源 = 2 Then
                If Not PatiCanBilling(mlng病人ID, mlng主页ID, GetInsidePrivs(p医嘱附费管理), p医嘱附费管理) Then Exit Sub
            End If
        End If
        If InStr(.TextMatrix(.Row, 1), "√") > 0 Then
            MsgBox "该单据已经收费，不允许删除。", vbInformation, gstrSysName
            Exit Sub
        End If
    End With
    
    If vsMoney.TextMatrix(vsMoney.Row, vsMoney.FixedCols) = "主费用" Then
        If InStr(GetInsidePrivs(p医嘱附费管理), "删除主费用") = 0 Then
            MsgBox "你没有删除主费用的权限，不能删除主费用。", vbInformation, gstrSysName
            Exit Sub
        Else
            If MsgBox("主费用删除后不能重新产生,你确实要删除项目主费用吗？", vbQuestion + vbYesNo + vbDefaultButton2, gstrSysName) = vbNo Then Exit Sub
        End If
    End If
    
    If zlIs备货材料(strNO, int记录性质) Then
        If frmStuffCharge.zlBillEdit(Me, 3, p医嘱附费管理, GetInsidePrivs(p医嘱附费管理), int记录性质, strNO, IIF(mint病人来源 = 2, 2, 1), , , , , , , , , IIF(mbln单独执行, mlng医嘱ID, 0)) = False Then
            Exit Sub
        End If
        Call zlRefresh(mlng执行科室ID, mlng医嘱ID, mlng发送号, mblnMoved, mbln单独执行)
        Exit Sub
    Else
        frmTechnicExpense.mstrPrivs = GetInsidePrivs(p医嘱附费管理)
        frmTechnicExpense.mlng医嘱ID = IIF(mbln单独执行, mlng医嘱ID, 0)
        frmTechnicExpense.mbytInState = 3
        frmTechnicExpense.mstrInNO = strNO
        frmTechnicExpense.mint病人来源 = IIF(mint病人来源 = 2, 2, 1)
        frmTechnicExpense.mint记录性质 = int记录性质
    End If
    On Error Resume Next
    frmTechnicExpense.Show 1, Me
    On Error GoTo 0
    If gblnOK Then
        Call zlRefresh(mlng执行科室ID, mlng医嘱ID, mlng发送号, mblnMoved, mbln单独执行)
    End If
End Sub

Private Sub FuncExtraFeeExe(ByVal bytType As Byte)
'功能：附费执行与取消执行
'参数：bytType=0-取消执行,1-执行
    Dim rsTmp As New ADODB.Recordset
    Dim StrSQL As String
    Dim strNO As String, int记录性质 As Integer, blnIsAbnormal As Boolean, blnTrans As Boolean
    Dim i As Long, blnDo As Boolean, str序号 As String, strDate As String
    Dim arr序号() As String, arrSQL As Variant
    Dim str类别 As String, str类别名 As String, curMoney As Currency
    Dim blnRefresh As Boolean, lngRow As Long
    Dim blnJudge As Boolean, blnTrace As Boolean, blnHaveDrug As Boolean, blnHave卫材 As Boolean, strMsg As String
    
    '1.如果单据全是药品或非自动发料的跟踪在用卫材，则不处理执行，因为这些是发药才表示执行。
    '2.跟踪在用的卫材在执行时根据系统参数决定是否自动发料。
    blnDo = False
    If mint审核标志 >= 1 And gbyt病人审核方式 = 1 Then
        MsgBox "该病人的费用正在审核阶段，不允许操作医嘱和费用。", vbInformation, gstrSysName
        Exit Sub
    End If
    With vsDetail
        For i = .FixedRows To .Rows - 1
            If InStr(",5,6,7,", "," & .Cell(flexcpData, i, .ColIndex("类别")) & ",") = 0 Then
                blnJudge = True
                If Val(.Cell(flexcpData, i, .ColIndex("类别"))) = 4 And Not gbln执行发料 Then
                    '判断是否卫材跟踪在用
                    StrSQL = " Select 1  From 材料特性 where 材料ID=[1] And 跟踪在用=1 "
                    Set rsTmp = zlDatabase.OpenSQLRecord(StrSQL, Me.Caption, Val(.Cell(flexcpData, i, .ColIndex("项目"))))
                    If rsTmp.RecordCount = 0 Then
                        blnJudge = True
                    Else
                        blnHave卫材 = True
                        blnJudge = False
                    End If
                End If
                If blnJudge Then
                    blnDo = True
                    '非药品单据，不存在部分记录执行的情况。
                    If bytType = 1 Then
                        If .Cell(flexcpData, i, .ColIndex("执行状态")) = 1 Then
                            MsgBox "该单据已经完全执行，无需再次登记执行。", vbQuestion, gstrSysName
                            Exit Sub
                        End If
                    Else
                        If .Cell(flexcpData, i, .ColIndex("执行状态")) = 0 Then
                            MsgBox "该单据未执行，无需取消执行。", vbQuestion, gstrSysName
                            Exit Sub
                        End If
                    End If
                    str序号 = str序号 & "," & .RowData(i)
                End If
            Else
                blnHaveDrug = True
            End If
        Next
        If blnDo = False Then
            If blnHaveDrug And blnHave卫材 Then
                strMsg = "药品通过发药和退药来处理执行或取消执行，" & vbNewLine & "在卫材非自动发料情况下,卫材通过发料来处理执行或取消执行，" _
                        & vbNewLine & "不允许直接登记或取消执行。"
            ElseIf blnHaveDrug Or blnHave卫材 Then
                strMsg = IIF(blnHaveDrug, "药品通过发药和退药来处理执行或取消执行，不允许直接登记或取消执行。", _
                    " 在卫材非自动发料情况下,卫材通过发料来处理执行或取消执行，" & vbNewLine & "不允许直接登记或取消执行。")
            End If
            'strMsg = ""为只含有跟踪在用卫材,且卫材自动发料
            If strMsg <> "" Then
                MsgBox strMsg, vbQuestion, gstrSysName
                Exit Sub
            End If
        End If
        str序号 = Mid(str序号, 2)
    End With
    With vsMoney
        strNO = .TextMatrix(.Row, .ColIndex("单据号"))
        int记录性质 = .Cell(flexcpData, .Row, .ColIndex("单据类型"))
    End With
    arrSQL = Array()
    
    If bytType = 1 Then
        If int记录性质 = 2 And gbln执行后审核 Then
            curMoney = GetUnAuditBill(strNO, int记录性质, str类别, str类别名)
        End If
        
        If mint病人来源 = 2 Then
            '住院记帐单据
            
            '卫料自动发料时的费用检查
            If gbln执行发料 And Not gbln执行后审核 Then
                If Not CheckStuffAudit(strNO, int记录性质) Then
                    MsgBox "操作不能继续。" & vbCrLf & vbCrLf & "单据中存在尚未审核的卫材费用，不能在执行之后自动发料。", vbInformation, gstrSysName
                    Exit Sub
                End If
            End If
            
            '执行后自动审核时，对出院病人检查强制记帐权限
            If gbln执行后审核 And curMoney <> 0 Then
                If Not PatiCanBilling(mlng病人ID, mlng主页ID, GetInsidePrivs(p医嘱附费管理), p医嘱附费管理) Then Exit Sub
            End If
        Else
            '门诊记帐的，可以执行后自动审核，否则须先交费或审核
            If int记录性质 = 1 Or int记录性质 = 2 And Not gbln执行后审核 Then
                If Not CheckFinishCharge(strNO, int记录性质, blnIsAbnormal) Then
                    If gbln执行前先结算 And Not gobjSquareCard Is Nothing Then
                        If blnIsAbnormal Then
                            MsgBox "该病人还存在异常费用，请检查。", vbInformation, gstrSysName
                            Exit Sub
                        End If
                        '门诊一卡通,项目执行前必须先收费或先记帐审核,不传单据号，根据医嘱ID读取所有未收费单据或未审核的记帐单
                        blnRefresh = gobjSquareCard.zlSquareAffirm(Me, p医嘱附费管理, mMainPrivs, mlng病人ID, 0, False, int记录性质, strNO, "")
                        If Not blnRefresh Then
                            Exit Sub
                        End If
                    Else
                        MsgBox "该病人还存在未" & IIF(int记录性质, "收费", "审核记帐") & "的费用，请检查。", vbInformation, gstrSysName
                        Exit Sub
                    End If
                End If
            End If
        End If
        
        '对记帐费用进行报警
        If int记录性质 = 2 And curMoney <> 0 And gbln执行后审核 Then
            If Not FinishBillingWarn(Me, GetInsidePrivs(p医嘱附费管理), mlng病人ID, mlng主页ID, mlng病人病区ID, curMoney, str类别, str类别名) Then Exit Sub
        End If
        
        If MsgBox("你确定要将单据""" & strNO & """登记为已执行吗？", vbQuestion + vbOKCancel + vbDefaultButton1, gstrSysName) = vbCancel Then Exit Sub
        
        strDate = "To_Date('" & Format(zlDatabase.Currentdate, "yyyy-MM-dd HH:mm:ss") & "','YYYY-MM-DD HH24:MI:SS')"
        arr序号 = Split(str序号, ",")
        '可能排除了药品行
        ReDim Preserve arrSQL(UBound(arrSQL) + 1)
        arrSQL(UBound(arrSQL)) = "zl_病人费用记录_Execute('" & strNO & "'," & int记录性质 & IIF(UBound(arr序号) + 1 = vsDetail.Rows - vsDetail.FixedRows, ",Null,", ",'" & str序号 & "',") & mint病人来源 & ",Null,'" & UserInfo.姓名 & "'," & strDate & ")"
    Else
        If MsgBox("你确定要取消单据""" & strNO & """的执行登记吗？", vbQuestion + vbOKCancel + vbDefaultButton1, gstrSysName) = vbCancel Then Exit Sub
        arr序号 = Split(str序号, ",")
        '可能排除了药品行
        ReDim Preserve arrSQL(UBound(arrSQL) + 1)
        arrSQL(UBound(arrSQL)) = "zl_病人费用记录_UnExecute('" & strNO & "'," & int记录性质 & IIF(UBound(arr序号) + 1 = vsDetail.Rows - vsDetail.FixedRows, ",Null,", ",'" & str序号 & "',") & mint病人来源 & ")"
    End If
    
    On Error GoTo errH
    gcnOracle.BeginTrans: blnTrans = True
        For i = 0 To UBound(arrSQL)
            Call zlDatabase.ExecuteProcedure(CStr(arrSQL(i)), Me.Caption)
        Next
    gcnOracle.CommitTrans: blnTrans = False
    lngRow = vsMoney.Row
    If blnRefresh Then
        Call LoadFeeList
    End If
    vsMoney.Row = lngRow
    '刷新费用明细清单
    Call LoadBillDetail(lngRow)
    
    RaiseEvent StatusTextUpdate(IIF(bytType = 0, "取消", "") & "执行操作成功。")
    Exit Sub
errH:
    If blnTrans Then gcnOracle.RollbackTrans
    If ErrCenter() = 1 Then Resume
    Call SaveErrLog
End Sub

Private Function GetUnAuditBill(ByVal strNO As String, ByVal int记录性质 As Integer, str类别 As String, str类别名 As String) As Currency
'功能：获取未审核的记帐单据的金额和类别，用于记帐报警
'参数：
'返回：str类别,str类别名=用于报警提示
'说明：
    Dim rsTmp As New ADODB.Recordset
    Dim StrSQL As String, curMoney As Currency
    
    str类别 = "": str类别名 = ""
    
    On Error GoTo errH
    StrSQL = _
        " Select B.编码,B.名称,Sum(A.实收金额) as 金额" & _
        " From 住院费用记录 A,收费项目类别 B" & _
        " Where A.NO = [1] And A.记录性质 = [2] And A.记录状态 = 0 And A.收费类别=B.编码" & _
        " Group by B.编码,B.名称"
    Set rsTmp = zlDatabase.OpenSQLRecord(StrSQL, Me.Caption, strNO, int记录性质)
    
    curMoney = 0
    Do While Not rsTmp.EOF
        curMoney = curMoney + Nvl(rsTmp!金额, 0)
        str类别 = str类别 & rsTmp!编码
        str类别名 = str类别名 & "," & rsTmp!名称
        rsTmp.MoveNext
    Loop
    
    str类别名 = Mid(str类别名, 2)
    GetUnAuditBill = curMoney
    Exit Function
errH:
    If ErrCenter() = 1 Then Resume
    Call SaveErrLog
End Function

Private Function CheckStuffAudit(ByVal strNO As String, ByVal int记录性质 As Integer) As Boolean
'功能：判断单据中跟踪在用卫材是否存在未审核的记帐费用
'参数：
'返回：
    Dim rsTmp As New ADODB.Recordset
    Dim StrSQL As String
    
    On Error GoTo errH
    StrSQL = " Select Nvl(Sum(A.实收金额),0) as 金额" & _
        " From 住院费用记录 A,材料特性 B" & _
        " Where NO = [1] And A.记录性质 = [2] And A.记录状态 = 0 And A.收费类别='4' And A.收费细目ID=B.材料ID And B.跟踪在用=1"
    
    Set rsTmp = zlDatabase.OpenSQLRecord(StrSQL, Me.Caption, strNO, int记录性质)
    If Not rsTmp.EOF Then
        CheckStuffAudit = rsTmp!金额 = 0
    Else
        CheckStuffAudit = True
    End If
    Exit Function
errH:
    If ErrCenter() = 1 Then Resume
    Call SaveErrLog
End Function

Private Function CheckFinishCharge(ByVal strNO As String, ByVal int记录性质 As Integer, ByRef blnIsAbnormal As Boolean) As Boolean
'功能：判断指定的单据是否已收费，以及是否存在异常费用
'参数：blnIsAbnormal=是否存在收费异常的记录

    Dim rsTmp As ADODB.Recordset, StrSQL As String
 
    StrSQL = "Select 记录状态,执行状态,NVL(费用状态,0) AS 费用状态 From 门诊费用记录 Where NO = [1] And 记录性质 = [2] And (记录状态 = 0 or NVL(费用状态,0) = 1)"
    On Error GoTo errH
    Set rsTmp = zlDatabase.OpenSQLRecord(StrSQL, Me.Caption, strNO, int记录性质)
    rsTmp.Filter = "记录状态=0"
    If rsTmp.RecordCount > 0 Then
        CheckFinishCharge = False
    Else
        CheckFinishCharge = True
        rsTmp.Filter = "费用状态=1"
        If rsTmp.RecordCount > 0 Then blnIsAbnormal = True
    End If
    
    Exit Function
errH:
    If ErrCenter() = 1 Then Resume
    Call SaveErrLog
End Function

Private Sub FuncExtraFeeMove()
'功能：附费转移
    Dim strNO As String, int记录性质 As Integer
    
    If mlng医嘱ID = 0 Then Exit Sub
    If mblnMoved Then
        MsgBox "该病人的本次" & IIF(mint病人来源 = 2, "住院", "就诊") & "数据已经转出到后备数据库，不允许操作。" & vbCrLf & _
            "您可以与系统管理员联系，将相应数据抽选返回。", vbInformation, gstrSysName
        Exit Sub
    End If
    
    With vsMoney
        If .TextMatrix(.Row, .ColIndex("费用类型")) <> "附加费用" Then
            MsgBox "当前选择的单据不是补充的附加费用。", vbInformation, gstrSysName
            Exit Sub
        End If
        
        strNO = .TextMatrix(.Row, .ColIndex("单据号"))
        int记录性质 = .Cell(flexcpData, .Row, .ColIndex("单据类型"))
    End With
    
    If frmExtraFeemove.ShowMe(Me, mlng病人ID, mlng主页ID, mstr挂号单, mlng相关ID, mstr诊疗类别, mlng执行科室ID, _
        strNO, int记录性质, IIF(mstrFeeTab = "住院费用记录", 2, 1)) Then
        Call RefreshData
    End If
End Sub

Private Sub FuncAdviceReCharge(Index As Integer)
'功能：费用销帐申请和审核
'参数：Index=冲销子功能索引(0,1)
    Dim blnOK As Boolean
    Dim strCommon As String, intAtom As Integer
    
    '调用费用部件功能
    On Error Resume Next
    If gobjInExse Is Nothing Then
        Set gobjInExse = CreateObject("zl9InExse.clsInExse")
        If gobjInExse Is Nothing Then Exit Sub
    End If
    err.Clear: On Error GoTo 0
    
    '部件调用合法性设置
    strCommon = Format(Now, "yyyyMMddHHmm")
    strCommon = TranPasswd(strCommon) & "||" & AnalyseComputer
    intAtom = GlobalAddAtom(strCommon)
    Call SaveSetting("ZLSOFT", "公共全局", "公共", intAtom)
    
    If Index = conMenu_Edit_ChargeDelApply Then
        blnOK = gobjInExse.CallReCharge(mfrmParent, gcnOracle, gstrDBUser, glngSys, 0, 1, mlng执行科室ID, GetInsidePrivs(p医嘱附费管理), mlng病人ID)
    ElseIf Index = conMenu_Edit_ChargeDelAudit Then
        blnOK = gobjInExse.CallReCharge(mfrmParent, gcnOracle, gstrDBUser, glngSys, 1, 1, mlng执行科室ID, GetInsidePrivs(p医嘱附费管理), mlng病人ID)
    End If
    
    Call GlobalDeleteAtom(intAtom)
    
    If blnOK Then RaiseEvent RequestRefresh
End Sub

Private Function GetSendFeeState() As String
'功能：获取指定医嘱某次发送之后的计费状态，主要考虑一些组合医嘱有多种计费的状态
'参数：lng医嘱ID=检验组合主项目,手术主项目,第一个检验项目的医嘱ID(即在医技站中显示的项目的)
'返回：",-1,0,1,"：其中-1=无需计费,1=已计费,0=未计费,对于门诊单据，2=部分收费,3=全部收费
    Dim rsTmp As New ADODB.Recordset
    Dim StrSQL As String
    
    On Error GoTo errH
    
    If mbln单独执行 Then
        StrSQL = "Select Distinct 计费状态 From 病人医嘱发送 Where 医嘱ID=[1] And 发送号=[2]"
    Else
        StrSQL = "Select ID From 病人医嘱记录 Where (ID=[3] Or 相关ID=[3]) And 诊疗类别=[4]"
        StrSQL = "Select Distinct 计费状态 From 病人医嘱发送 Where 医嘱ID IN(" & StrSQL & ") And 发送号=[2]"
    End If
    If mblnMoved Then
        StrSQL = Replace(StrSQL, "病人医嘱记录", "H病人医嘱记录")
        StrSQL = Replace(StrSQL, "病人医嘱发送", "H病人医嘱发送")
    End If
    Set rsTmp = zlDatabase.OpenSQLRecord(StrSQL, "mdlCISKernel", mlng医嘱ID, mlng发送号, IIF(mlng相关ID <> 0, mlng相关ID, mlng医嘱ID), mstr诊疗类别)
    StrSQL = ""
    Do While Not rsTmp.EOF
        StrSQL = StrSQL & "," & IIF(Val("" & rsTmp!计费状态) > 1, 1, Val("" & rsTmp!计费状态))
        rsTmp.MoveNext
    Loop
    If StrSQL <> "" Then GetSendFeeState = StrSQL & ","
    Exit Function
errH:
    If ErrCenter() = 1 Then Resume
    Call SaveErrLog
End Function
