Attribute VB_Name = "mdlDcn"
Option Explicit
Private Const GWL_WNDPROC = -4
Public Const GWL_USERDATA = (-21)
Public Const WM_SIZE = &H5
Public Const WM_USER = &H400
Public Const WM_BROADCAST = &H218
Private Declare Function CallWindowProc Lib "user32" Alias "CallWindowProcA" (ByVal lpPrevWndFunc As Long, ByVal hwnd As Long, ByVal Msg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long

Public Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongA" (ByVal hwnd As Long, ByVal nIndex As Long) As Long
Public Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
Public Declare Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, lParam As Any) As Long
Public Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As Any, ByVal Length As Long)


Public Declare Function OCI_ConnCreate Lib "zlNoticeLib.dll" (ByVal strServer As String, ByVal strUser As String, ByVal strPwd As String) As Boolean
Public Declare Sub OCI_Register Lib "zlNoticeLib.dll" (ByVal lngHandler As Long, ByVal strTable As String)
Public Declare Sub OCI_UnRigister Lib "zlNoticeLib.dll" ()

Public lpPrevWndProc As Long    '窗体句柄
Public grsNotice As ADODB.Recordset '通知缓存记录集
Public glng会话号  As Long


Public Function Hook(ByVal hwnd As Long) As Long
    '指定自定义的窗口过程
    lpPrevWndProc = GetWindowLong(hwnd, GWL_WNDPROC)
    SetWindowLong hwnd, GWL_WNDPROC, AddressOf WindowProc
    
    Hook = lpPrevWndProc
End Function

Public Sub UnHook(ByVal hwnd As Long)
    Dim temp As Long
    'Cease subclassing.
    temp = SetWindowLong(hwnd, GWL_WNDPROC, lpPrevWndProc)
End Sub

Public Function WindowProc(ByVal hw As Long, ByVal uMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
    Dim byteRowid(100) As Byte, strNotice As String
    Dim intType As Integer, strOwner As String, strTable As String
    Dim strRowid As String
    '调用原来的窗口过程
    WindowProc = CallWindowProc(lpPrevWndProc, hw, uMsg, wParam, lParam)
    
    If uMsg = WM_USER + 1 Then
        'Debug.Print wParam
        On Error Resume Next
        
        CopyMemory byteRowid(0), ByVal wParam, 100
        strNotice = StrConv(byteRowid, vbUnicode)
        intType = Split(strNotice, "-")(0)
        strOwner = Split(Split(strNotice, "-")(1), ".")(0)
        strTable = Split(Split(strNotice, "-")(1), ".")(1)
        strRowid = Split(strNotice, "-")(2): frmMain.GetRowid strRowid
        
        With grsNotice
            If grsNotice.RecordCount > 0 Then .MoveLast
            .AddNew Array("ChangeType", "TableOwner", "TableName", "RowId"), Array(intType, strOwner, strTable, strRowid)
            .Filter = 0
        End With
        
    End If
    
End Function


'--------------------------------------------------------------------------------------------------------
'数据操作
Public Function GetNoticeList() As ADODB.Recordset
    '功能:获取NoticeList,并返回一个记录集
    Dim strSql As String
    
    On Error GoTo errH
    strSql = "Select Noticecode, Noticename, Tableowner, Tablename, Receivercols,  Changetype," & vbNewLine & _
                    "SplitChar,Noticekind, Comments, Status" & vbNewLine & _
                    "From Zltools.Zlnoticelists"
                        
    Set GetNoticeList = zlDatabase.OpenSQLRecord(strSql, "获取NoticeList")
    Exit Function
errH:
    ErrCenter
End Function

Public Function GetClientPort() As ADODB.Recordset
    '功能:获取客户端UDP端口设置
    Dim strSql As String
    
    On Error GoTo errH
    strSql = "Select 参数值 From zloptions Where 参数号=9"
                        
    Set GetClientPort = zlDatabase.OpenSQLRecord(strSql, "获取客户端UDP端口")
    Exit Function
errH:
    ErrCenter
End Function

Public Function GetJobs() As ADODB.Recordset
    Dim strSql  As String
    
    On Error GoTo errH
    strSql = "Select 间隔时间, Nvl(作业号, 0) 作业号 From zlAutoJobs Where 类型 = 3 And 序号 = 3 And 系统 Is Null"
                        
    Set GetJobs = zlDatabase.OpenSQLRecord(strSql, "获取客户端UDP端口")
    Exit Function
errH:
    ErrCenter
End Function

Public Function GetUserNotices() As ADODB.Recordset
    '功能:获取自定义通知,并返回一个记录集
    Dim strSql As String
    
    On Error GoTo errH
    strSql = "Select a.序号, a.提醒内容, a.检查周期, a.提醒周期, To_Char(a.开始时间, 'yyyy/mm/dd hh24:mi') 开始时间," & vbNewLine & _
                "       To_Char(a.终止时间, 'yyyy/mm/dd hh24:mi') 终止时间" & vbNewLine & _
                "From zlNotices A" & vbNewLine & _
                "Order By 1"

    Set GetUserNotices = zlDatabase.OpenSQLRecord(strSql, "获取自定义通知")
    Exit Function
errH:
    ErrCenter
End Function

Public Function GetSid() As Long
    '功能:获取当前会话的Sid
    Dim strSql As String, rsTmp As ADODB.Recordset
    
    On Error GoTo errH
    strSql = "Select Userenv('SessionID') AudSid From Dual"
    Set rsTmp = zlDatabase.OpenSQLRecord(strSql, "获取SID")
    GetSid = Val(rsTmp!AudSid & "")
    
    Exit Function
errH:
    ErrCenter
End Function

Public Function CheckSidState(ByVal lngSid As Long) As Boolean
    '检查指定的Sid是否在线
    Dim strSql As String, rsTmp As ADODB.Recordset
    
    strSql = "Select 1 From GV$session Where Audsid = [1] And STATUS <> 'KILLED'"
    Set rsTmp = zlDatabase.OpenSQLRecord(strSql, "获取SID", lngSid)
    CheckSidState = rsTmp.RecordCount <> 0
    Exit Function
errH:
    ErrCenter
End Function

Public Function UpdateDcnState2DB(ByVal intType As Integer, ByVal strIp As String) As Boolean
    '在数据库中修改消息收发器状态
    'intType=1:在线     intType=0:离线
    Dim strSql As String, rsClient As ADODB.Recordset
    Dim rsTmp As ADODB.Recordset
    
    On Error GoTo errH
    
    If glng会话号 = 0 Then glng会话号 = GetSid
    
    '由于调用部件时,已经向zlclientSession表中插入了当前会话信息,因此先根据会话号删除
    strSql = "Delete From zltools.zlclientsession Where 会话号 = " & glng会话号
    gcnOracle.Execute strSql
    
    '检查收发器状态
    strSql = "Select IP,消息端口,状态,会话号,用户名 From zltools.zlclientsession Where 工作站 = '消息收发器'"
    Set rsClient = zlDatabase.OpenSQLRecord(strSql, "获取收发器信息")
    
    If rsClient.RecordCount = 0 Then
        '记录中没有消息收发器,就直接插入数据
        strSql = "Insert Into Zltools.Zlclientsession (工作站, 消息端口, 会话号, Ip, 用户名,状态) Values ('消息收发器', 9999, " & glng会话号 & ", '" & strIp & "', '" & gstrUserName & "'," & intType & ")"
    Else
        If rsClient!IP <> strIp And NVL(rsClient!状态 & "", 0) = 1 Then    '记录中已有其他IP的消息收发器,说明在其他机器上已经登录
            '检查已经开启的收发器,是否被异常终止
            If CheckSidState(Val(rsClient!会话号 & "")) Then
                MsgBox "消息通知服务已经在Ip " & rsClient!IP & " 开启，无法重复开启"
                Exit Function
            End If
        End If
        
        strSql = "Update Zltools.Zlclientsession Set 状态 = " & intType & " ,会话号 = " & glng会话号 & ", 用户名 = '" & gstrUserName & "',IP = '" & strIp & "'  Where 工作站='消息收发器'"
    End If
    
    gcnOracle.Execute strSql
    UpdateDcnState2DB = True
    Exit Function
errH:
    ErrCenter
End Function

Public Function UpdateNtsState2DB(ByVal intState As Integer, ByVal strIp As String, ByVal lngPort As Integer) As Boolean
    Dim strSql As String, rsTmp As ADODB.Recordset
    Dim arrTmp() As String
    
    On Error GoTo errH
    
    If glng会话号 = 0 Then glng会话号 = GetSid
    
    strSql = "SELECT 参数值 FROM zloptions WHERE 参数号=[1]"
    Set rsTmp = zlDatabase.OpenSQLRecord(strSql, "参数获取", 7)

    If rsTmp.RecordCount = 0 Then
        strSql = "Insert Into zlOptions" & vbNewLine & _
                    "(参数号, 参数名, 参数值, 缺省值, 参数说明)" & vbNewLine & _
                    "Select 7, '提醒服务参数'," & vbNewLine & _
                    "'" & strIp & ";" & lngPort & ";" & intState & ";" & glng会话号 & "'" & vbNewLine & _
                    ", ';9999;0', '用于提醒服务的服务器名、端口号及状态等信息.。'" & vbNewLine & _
                    "From Dual"
    Else
        '判断是否在线
        arrTmp = Split(rsTmp!参数值 & "", ";")
        If UBound(arrTmp) = 3 Then
            If CheckSidState(arrTmp(3)) And arrTmp(2) = 1 And intState = 1 Then
                MsgBox "自定义提醒服务已经在Ip " & arrTmp(0) & " 开启，无法重复开启"
                Exit Function
            Else
                strSql = "Update zloptions Set 参数值 ='" & strIp & ";" & lngPort & ";" & intState & ";" & glng会话号 & "' Where  参数号=7"
            End If
        Else
            strSql = "Update zloptions Set 参数值 ='" & strIp & ";" & lngPort & ";" & intState & ";" & glng会话号 & "' Where  参数号=7"
        End If
    End If
    
    gcnOracle.Execute strSql
    UpdateNtsState2DB = True
    Exit Function
errH:
    ErrCenter
End Function

Public Function ChangeClientSet2DB(ByVal lngPortS As Long, ByVal lngPortE As Long) As Boolean
    Dim strSql As String
    
    On Error GoTo errH
    
    If lngPortS = 0 Or lngPortE = 0 Then
        strSql = "Update zloptions set 参数值 = 0"
    Else
        strSql = "Update zloptions set 参数值 = '" & lngPortS & "-" & lngPortE & "' Where 参数号 = 9"
    End If
    
    gcnOracle.Execute strSql
    ChangeClientSet2DB = True
    Exit Function
errH:
    ErrCenter
End Function

Public Function ChangeJobSet2DB(ByVal intType As Integer, Optional ByVal intInterval As Integer = 5) As Boolean
    '功能:修改自动作业信息
    'intType =1: 提交自动任务  intType =2:修改自动任务 intType =3:删除自动任务
    'intInterval-自动任务执行频率,默认每5分钟执行一次
    Dim strSql As String
    
    On Error GoTo errH
    Select Case intType
    Case 1
        strSql = "Begin" & vbNewLine & _
                    "  Execute Immediate 'Update  zlAutoJobs Set 间隔时间 = " & intInterval & "  Where 类型 = 3 And 序号 = 3 And 系统 Is Null';" & vbNewLine & _
                    "  zltools.Zl_Jobsubmit(Null,3,3);" & vbNewLine & _
                    "End;"
    Case 2
        strSql = "Begin" & vbNewLine & _
                    "  Execute Immediate 'Update  zlAutoJobs Set 间隔时间 = " & intInterval & "  Where 类型 = 3 And 序号 = 3 And 系统 Is Null';" & vbNewLine & _
                    "  zltools.Zl_Jobchange(Null,3,3);" & vbNewLine & _
                    "End;"
    Case 3
        strSql = "Begin" & vbNewLine & _
                    "  zltools.Zl_Jobremove(Null,3,3);" & vbNewLine & _
                    "End;"
    End Select
    
    gcnZltools.Execute strSql
    ChangeJobSet2DB = True
    Exit Function
errH:
    ErrCenter
End Function

Private Function GetZltoolsConnection(ByVal strPwd As String) As Boolean
    '功能: 获取zltools连接对象
    
    On Error Resume Next
    
    If gcnZltools Is Nothing Then
        Set gcnZltools = New ADODB.Connection
    End If
    
    With gcnZltools
        .Provider = "OraOLEDB.Oracle"
        .Open "PLSQLRSet=1;Data Source=" & gstrServer, "ZLTOOLS", strPwd
      
        If .State = adStateOpen Then
            GetZltoolsConnection = True
        End If
    End With

End Function

Public Function GetZltools() As Boolean
    Dim blnResult As Boolean, strPwd As String
    
    blnResult = GetZltoolsConnection("ZLTOOLS")
    
    If Not blnResult Then
        blnResult = GetZltoolsConnection("ZLSOFT")
    End If
    
    If Not blnResult Then
        blnResult = frmUserCheckLogin.GetZltoolsByLogin
    End If
    
    GetZltools = blnResult
End Function



